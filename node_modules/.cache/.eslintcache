[{"E:\\React\\workspace\\order-ticket\\src\\index.js":"1","E:\\React\\workspace\\order-ticket\\src\\App.jsx":"2","E:\\React\\workspace\\order-ticket\\src\\components\\MyNavLink\\index.jsx":"3","E:\\React\\workspace\\order-ticket\\src\\api\\ajax.js":"4","E:\\React\\workspace\\order-ticket\\src\\pages\\Root\\index.jsx":"5","E:\\React\\workspace\\order-ticket\\src\\components\\LinkButton\\index.jsx":"6","E:\\React\\workspace\\order-ticket\\src\\pages\\Dev\\Trains\\index.jsx":"7","E:\\React\\workspace\\order-ticket\\src\\pages\\Dev\\Welcome\\index.jsx":"8","E:\\React\\workspace\\order-ticket\\src\\pages\\Dev\\Platform\\index.jsx":"9","E:\\React\\workspace\\order-ticket\\src\\pages\\Dev\\Order\\index.jsx":"10","E:\\React\\workspace\\order-ticket\\src\\pages\\Dev\\Carriage\\index.jsx":"11","E:\\React\\workspace\\order-ticket\\src\\pages\\Dev\\Trains\\Home\\index.jsx":"12","E:\\React\\workspace\\order-ticket\\src\\pages\\Dev\\Trains\\CarriageInfo\\index.jsx":"13","E:\\React\\workspace\\order-ticket\\src\\pages\\Dev\\Trains\\SiteInfo\\index.jsx":"14","E:\\React\\workspace\\order-ticket\\src\\pages\\Dev\\Site\\index.jsx":"15","E:\\React\\workspace\\order-ticket\\src\\pages\\Dev\\index.jsx":"16","E:\\React\\workspace\\order-ticket\\src\\pages\\User\\index.jsx":"17","E:\\React\\workspace\\order-ticket\\src\\pages\\User\\TicketList\\index.jsx":"18","E:\\React\\workspace\\order-ticket\\src\\pages\\User\\Search\\index.jsx":"19","E:\\React\\workspace\\order-ticket\\src\\pages\\User\\Register\\index.jsx":"20","E:\\React\\workspace\\order-ticket\\src\\pages\\Dev\\Home\\index.jsx":"21","E:\\React\\workspace\\order-ticket\\src\\pages\\Dev\\Login\\index.jsx":"22","E:\\React\\workspace\\order-ticket\\src\\pages\\User\\Login\\index.jsx":"23","E:\\React\\workspace\\order-ticket\\src\\pages\\User\\OrderTicket\\index.jsx":"24","E:\\React\\workspace\\order-ticket\\src\\pages\\User\\OrderInfo\\index.jsx":"25","E:\\React\\workspace\\order-ticket\\src\\pages\\User\\Complete\\index.jsx":"26","E:\\React\\workspace\\order-ticket\\src\\pages\\User\\Center\\index.jsx":"27","E:\\React\\workspace\\order-ticket\\src\\components\\DevLeftNav\\index.jsx":"28","E:\\React\\workspace\\order-ticket\\src\\components\\UserLeftNav\\index.jsx":"29","E:\\React\\workspace\\order-ticket\\src\\pages\\User\\Home\\index.jsx":"30","E:\\React\\workspace\\order-ticket\\src\\pages\\User\\MyOrder\\index.jsx":"31","E:\\React\\workspace\\order-ticket\\src\\pages\\User\\Passenger\\index.jsx":"32","E:\\React\\workspace\\order-ticket\\src\\utils\\MemoryUser\\index.jsx":"33","E:\\React\\workspace\\order-ticket\\src\\utils\\storageUtils\\index.jsx":"34","E:\\React\\workspace\\order-ticket\\src\\api\\dev\\site.js":"35","E:\\React\\workspace\\order-ticket\\src\\api\\dev\\admin.js":"36","E:\\React\\workspace\\order-ticket\\src\\api\\dev\\carriage.js":"37","E:\\React\\workspace\\order-ticket\\src\\api\\dev\\train.js":"38","E:\\React\\workspace\\order-ticket\\src\\pages\\Dev\\Trains\\Add\\index.jsx":"39","E:\\React\\workspace\\order-ticket\\src\\pages\\Dev\\Trains\\Updata\\index.jsx":"40","E:\\React\\workspace\\order-ticket\\src\\api\\dev\\order.js":"41","E:\\React\\workspace\\order-ticket\\src\\api\\user\\search.js":"42","E:\\React\\workspace\\order-ticket\\src\\api\\user\\user.js":"43","E:\\React\\workspace\\order-ticket\\src\\api\\user\\order.js":"44"},{"size":415,"mtime":1632281632095,"results":"45","hashOfConfig":"46"},{"size":519,"mtime":1630983596855,"results":"47","hashOfConfig":"46"},{"size":237,"mtime":1629884746066,"results":"48","hashOfConfig":"46"},{"size":858,"mtime":1631774963718,"results":"49","hashOfConfig":"46"},{"size":761,"mtime":1630994754982,"results":"50","hashOfConfig":"46"},{"size":188,"mtime":1630482787747,"results":"51","hashOfConfig":"46"},{"size":661,"mtime":1632293716540,"results":"52","hashOfConfig":"46"},{"size":239,"mtime":1630995268853,"results":"53","hashOfConfig":"46"},{"size":13129,"mtime":1632990043934,"results":"54","hashOfConfig":"46"},{"size":10227,"mtime":1632989380501,"results":"55","hashOfConfig":"46"},{"size":21968,"mtime":1632989789728,"results":"56","hashOfConfig":"46"},{"size":4629,"mtime":1632989946330,"results":"57","hashOfConfig":"46"},{"size":11598,"mtime":1632464762500,"results":"58","hashOfConfig":"46"},{"size":7440,"mtime":1632464743309,"results":"59","hashOfConfig":"46"},{"size":9963,"mtime":1631856786939,"results":"60","hashOfConfig":"46"},{"size":535,"mtime":1630987259106,"results":"61","hashOfConfig":"46"},{"size":1215,"mtime":1631606656447,"results":"62","hashOfConfig":"46"},{"size":10480,"mtime":1632990397025,"results":"63","hashOfConfig":"46"},{"size":4998,"mtime":1632908605315,"results":"64","hashOfConfig":"46"},{"size":4515,"mtime":1632820936756,"results":"65","hashOfConfig":"46"},{"size":3137,"mtime":1632987948985,"results":"66","hashOfConfig":"46"},{"size":2728,"mtime":1632640817277,"results":"67","hashOfConfig":"46"},{"size":2652,"mtime":1632642896385,"results":"68","hashOfConfig":"46"},{"size":21393,"mtime":1632990588036,"results":"69","hashOfConfig":"46"},{"size":8289,"mtime":1632990609094,"results":"70","hashOfConfig":"46"},{"size":3412,"mtime":1632882654622,"results":"71","hashOfConfig":"46"},{"size":514,"mtime":1632897680117,"results":"72","hashOfConfig":"46"},{"size":1790,"mtime":1632465002610,"results":"73","hashOfConfig":"46"},{"size":1294,"mtime":1632465001716,"results":"74","hashOfConfig":"46"},{"size":2593,"mtime":1632882690915,"results":"75","hashOfConfig":"46"},{"size":8845,"mtime":1632908484858,"results":"76","hashOfConfig":"46"},{"size":14512,"mtime":1632905367971,"results":"77","hashOfConfig":"46"},{"size":49,"mtime":1631693811716,"results":"78","hashOfConfig":"79"},{"size":1145,"mtime":1632640871342,"results":"80","hashOfConfig":"46"},{"size":260,"mtime":1631779097218,"results":"81","hashOfConfig":"46"},{"size":679,"mtime":1632388812895,"results":"82","hashOfConfig":"46"},{"size":533,"mtime":1631866271148,"results":"83","hashOfConfig":"46"},{"size":615,"mtime":1632368049332,"results":"84","hashOfConfig":"46"},{"size":7668,"mtime":1632465352138,"results":"85","hashOfConfig":"46"},{"size":11258,"mtime":1632465296991,"results":"86","hashOfConfig":"46"},{"size":317,"mtime":1632380678511,"results":"87","hashOfConfig":"46"},{"size":297,"mtime":1632639563741,"results":"88","hashOfConfig":"46"},{"size":1075,"mtime":1632902550399,"results":"89","hashOfConfig":"46"},{"size":367,"mtime":1632809008579,"results":"90","hashOfConfig":"46"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},"zv7isu",{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"93"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"93"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"93"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"93"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"93"},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"93"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"dsg5fd",{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"93"},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"93"},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},"E:\\React\\workspace\\order-ticket\\src\\index.js",[],["188","189"],"E:\\React\\workspace\\order-ticket\\src\\App.jsx",[],"E:\\React\\workspace\\order-ticket\\src\\components\\MyNavLink\\index.jsx",[],"E:\\React\\workspace\\order-ticket\\src\\api\\ajax.js",[],"E:\\React\\workspace\\order-ticket\\src\\pages\\Root\\index.jsx",[],"E:\\React\\workspace\\order-ticket\\src\\components\\LinkButton\\index.jsx",[],"E:\\React\\workspace\\order-ticket\\src\\pages\\Dev\\Trains\\index.jsx",[],"E:\\React\\workspace\\order-ticket\\src\\pages\\Dev\\Welcome\\index.jsx",[],"E:\\React\\workspace\\order-ticket\\src\\pages\\Dev\\Platform\\index.jsx",[],"E:\\React\\workspace\\order-ticket\\src\\pages\\Dev\\Order\\index.jsx",["190"],"E:\\React\\workspace\\order-ticket\\src\\pages\\Dev\\Carriage\\index.jsx",["191"],"E:\\React\\workspace\\order-ticket\\src\\pages\\Dev\\Trains\\Home\\index.jsx",[],"E:\\React\\workspace\\order-ticket\\src\\pages\\Dev\\Trains\\CarriageInfo\\index.jsx",["192","193"],"import React, { useContext, useState, useEffect, useRef } from 'react';\r\nimport { Card, Button, Table, Modal, Space, Form, Input, Select, Popconfirm, Divider, message } from 'antd'\r\nimport {\r\n    PlusOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport LinkButton from '../../../../components/LinkButton';\r\nimport { getCarriageList } from '../../../../api/dev/train';\r\nimport { carriageInfo } from '../../../../api/dev/carriage';\r\nconst { Option } = Select\r\nconst EditableContext = React.createContext(null);\r\n\r\nconst EditableRow = ({ index, ...props }) => {\r\n    const [form] = Form.useForm();\r\n    return (\r\n        <Form form={form} component={false}>\r\n            <EditableContext.Provider value={form}>\r\n                <tr {...props} />\r\n            </EditableContext.Provider>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst EditableCell = ({\r\n    title,\r\n    editable,\r\n    children,\r\n    dataIndex,\r\n    record,\r\n    handleSave,\r\n    ...restProps\r\n}) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const inputRef = useRef(null);\r\n    const form = useContext(EditableContext);\r\n    useEffect(() => {\r\n        if (editing) {\r\n            inputRef.current.focus();\r\n        }\r\n    }, [editing]);\r\n\r\n    const toggleEdit = () => {\r\n        setEditing(!editing);\r\n        form.setFieldsValue({\r\n            [dataIndex]: record[dataIndex],\r\n        });\r\n    };\r\n\r\n    const save = async () => {\r\n        try {\r\n            const values = await form.validateFields();\r\n            toggleEdit();\r\n            handleSave({ ...record, ...values });\r\n        } catch (errInfo) {\r\n            console.log('Save failed:', errInfo);\r\n        }\r\n    };\r\n\r\n    let childNode = children;\r\n\r\n    if (editable) {\r\n        childNode = editing ? (\r\n            <Form.Item\r\n                style={{\r\n                    margin: 0,\r\n                }}\r\n                name={dataIndex}\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: `${title}是必填的`,\r\n                    },\r\n                ]}\r\n            >\r\n                <Input ref={inputRef} onPressEnter={save} onBlur={save} />\r\n            </Form.Item>\r\n        ) : (\r\n            <div\r\n                className=\"editable-cell-value-wrap\"\r\n                style={{\r\n                    paddingRight: 24,\r\n                }}\r\n                onClick={toggleEdit}\r\n            >\r\n                {children}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return <td {...restProps}>{childNode}</td>;\r\n};\r\n\r\nexport default class CarriageInfo extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.columns = [\r\n            {\r\n                title: '车厢序号',\r\n                dataIndex: 'carriageOrder',\r\n                key: '2',\r\n                align: 'center',\r\n            },\r\n            {\r\n                title: '车厢编号',\r\n                dataIndex: 'carriageNumber',\r\n                key: '3',\r\n                align: 'center',\r\n                editable: true,\r\n            },\r\n            {\r\n                title: '类别',\r\n                dataIndex: 'type',\r\n                key: '4',\r\n                align: 'center',\r\n                editable: true,\r\n            },\r\n            {\r\n                title: '座位数',\r\n                dataIndex: 'seatNumber',\r\n                key: '5',\r\n                align: 'center',\r\n                editable: true,\r\n            },\r\n            {\r\n                title: '价格基数',\r\n                dataIndex: 'priceBase',\r\n                key: '6',\r\n                align: 'center',\r\n                editable: true,\r\n            },\r\n            {\r\n                title: '操作',\r\n                align: 'center',\r\n                render: (_, record) =>\r\n                    this.state.dataSource.length >= 1 ? (\r\n                        <div>\r\n                            <Popconfirm title=\"确定删除吗\" onConfirm={() => this.handleDelete(record.carriageOrder)}>\r\n                                <LinkButton >删除</LinkButton>\r\n                            </Popconfirm>\r\n                        </div>\r\n                    ) : null,\r\n            },\r\n        ];\r\n        this.state = {\r\n            dataSource: [],\r\n            count: 1,\r\n            showStatus: 0,\r\n            carriages: [],\r\n            carriageOrder: 1,\r\n        }\r\n    }\r\n\r\n\r\n    handleDelete = (key) => {\r\n        const dataSource = [...this.state.dataSource];\r\n        const newDataSource = dataSource.filter((item) => {\r\n            if (item.carriageOrder !== key) {\r\n                if (item.carriageOrder > key) {\r\n                    --item.carriageOrder\r\n                }\r\n                return item\r\n            }\r\n        })\r\n        this.props.deleteCarriage(key)\r\n        if (newDataSource.length === 0) this.setState({ count: 1 })\r\n        this.setState({\r\n            dataSource: newDataSource,\r\n        });\r\n    }\r\n    handleAdd = async () => {\r\n        // 调接口拿数据\r\n        const result = await getCarriageList()\r\n        if (result.code === 1) {\r\n            this.setState({ showStatus: 1, carriages: result.data })\r\n        } else {\r\n            message.error(result.msg)\r\n        }\r\n    }\r\n    handleSave = (row) => {\r\n        const newData = [...this.state.dataSource];\r\n        const index = newData.findIndex((item) => row.key === item.key);\r\n        const item = newData[index];\r\n        newData.splice(index, 1, { ...item, ...row });\r\n        this.setState({\r\n            dataSource: newData,\r\n        });\r\n    }\r\n\r\n    // 处理点击取消\r\n    handleCancel = () => {\r\n        this.setState({ showStatus: 0 })\r\n    }\r\n\r\n    // 表单提交\r\n    onFinish = async (values) => {\r\n        const result = await carriageInfo(values.carriageId)\r\n        if (result.code === 1) {\r\n            const { dataSource, carriages } = this.state\r\n            const { data } = result\r\n            const newData = {\r\n                key: values.carriageId,\r\n                carriageOrder: dataSource.length + 1,\r\n                carriageNumber: data.carriageNumber,\r\n                type: data.levelCar === 1 ? '豪华' : (data.levelCar === 2 ? '普通' : '经济'),\r\n                seatNumber: data.seatCount,\r\n                priceBase: data.priceBase,\r\n            }\r\n            const newCarriageLists = carriages.filter((item) => {\r\n                return item.id !== values.carriageId\r\n            })\r\n            this.props.addCarriage(values.carriageId)\r\n            this.setState({\r\n                dataSource: [...dataSource, newData],\r\n                count: dataSource.length + 1,\r\n                carriages: carriages\r\n            })\r\n            this.setState({ showStatus: 0 })\r\n        } else {\r\n            message.error(result.msg)\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        let { carriageOrder } = this.state\r\n        let { carriageList } = this.props\r\n        if (!carriageList) return\r\n        const newList = carriageList.map((item, _) => {\r\n            item.carriageOrder = carriageOrder\r\n            carriageOrder++\r\n            item.type = item.levelCar === 1 ? '豪华' : (item.levelCar === 2 ? '普通' : '经济')\r\n            item.seatNumber = item.seatCount\r\n            return item\r\n        })\r\n        this.setState({ dataSource: newList, carriageOrder })\r\n    }\r\n\r\n    render() {\r\n        let { showStatus, dataSource, carriages } = this.state\r\n        const components = {\r\n            body: {\r\n                row: EditableRow,\r\n                cell: EditableCell,\r\n            },\r\n        };\r\n        const columns = this.columns.map((col) => {\r\n            if (!col.editable) {\r\n                return col;\r\n            }\r\n\r\n            return {\r\n                ...col,\r\n                onCell: (record) => ({\r\n                    record,\r\n                    editable: col.editable,\r\n                    dataIndex: col.dataIndex,\r\n                    title: col.title,\r\n                    handleSave: this.handleSave,\r\n                }),\r\n            };\r\n        });\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <Card\r\n                        title={<Divider orientation=\"left\" plain>\r\n                            <Button shape='round'>车厢信息</Button>\r\n                        </Divider>}\r\n                        size='small'\r\n                        extra={<Button onClick={this.handleAdd} icon={<PlusOutlined />} type=\"primary\" style={{ marginRight: '100px' }}></Button>}\r\n                    >\r\n                        <Table\r\n                            components={components}\r\n                            rowClassName={() => 'editable-row'}\r\n                            bordered\r\n                            dataSource={dataSource}\r\n                            columns={columns}\r\n                            rowKey=\"carriageOrder\"\r\n                            pagination={false}\r\n                        />\r\n                    </Card>\r\n                </div>\r\n                {/* 添加车厢信息的模态窗口 */}\r\n                <div>\r\n                    <Modal\r\n                        title=\"添加车厢信息\"\r\n                        visible={showStatus === 1}\r\n                        onOk={this.handleAdd}\r\n                        onCancel={this.handleCancel}\r\n                        footer={[]}\r\n                        width='800px'\r\n                        style={{ top: 100 }}\r\n                        destroyOnClose='true'\r\n                    >\r\n                        <Form\r\n                            layout=\"vertical\"\r\n                            onFinish={this.onFinish}\r\n                        >\r\n                            <Form.Item\r\n                                name=\"carriageId\"\r\n                                label=\"车厢\"\r\n                                rules={[{ required: true, message: '请选择车厢' }]}\r\n\r\n                            >\r\n                                <Select\r\n                                    showSearch\r\n                                    placeholder=\"可以搜索车厢编号\"\r\n                                    filterOption={(input, option) =>\r\n                                        option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                                    }\r\n                                    onSelect={this.handleSelect}\r\n                                >\r\n                                    {carriages.map((item, _) => {\r\n                                        return <Option key={item.id} value={item.id}>{item.carriageNumber}</Option>\r\n                                    })}\r\n                                </Select>\r\n                            </Form.Item>\r\n\r\n                            <div\r\n                                style={{\r\n                                    textAlign: 'right',\r\n                                    marginTop: '50px'\r\n                                }}\r\n                            >\r\n                                <Space size=\"large\">\r\n                                    <Button onClick={this.handleCancel} style={{ marginRight: 8 }}>\r\n                                        取消\r\n                                    </Button>\r\n                                    <Button type=\"primary\" htmlType=\"submit\">\r\n                                        确认\r\n                                    </Button>\r\n                                </Space>\r\n\r\n                            </div>\r\n                        </Form>\r\n                    </Modal>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","E:\\React\\workspace\\order-ticket\\src\\pages\\Dev\\Trains\\SiteInfo\\index.jsx",["194"],"import React, { Component } from 'react';\r\nimport { Card, Button, Table, Modal, Space, Form, Select, Popconfirm, Divider, message, Input } from 'antd'\r\nimport {\r\n    PlusOutlined\r\n} from '@ant-design/icons';\r\nimport LinkButton from '../../../../components/LinkButton';\r\nimport { getSiteList } from '../../../../api/dev/train';\r\n\r\n\r\nconst { Option } = Select\r\nexport default class SiteInfo extends Component {\r\n\r\n    state = {\r\n        showStatus: 0,\r\n        number: 1,\r\n        dataSource: [],\r\n        sites: [],\r\n        siteId: 0,\r\n    }\r\n\r\n    addSite = async () => {\r\n        // 调用接口拿数据\r\n        const result = await getSiteList()\r\n        if (result.code === 1) {\r\n            this.setState({ showStatus: 1, sites: result.data })\r\n        } else {\r\n            message.error(result.msg)\r\n        }\r\n\r\n    }\r\n\r\n    // 处理点击取消\r\n    handleCancel = () => {\r\n        this.setState({ showStatus: 0 })\r\n    }\r\n\r\n    // 表单提交\r\n    onFinish = (values) => {\r\n        const { dataSource, number, siteId } = this.state\r\n        const v = { number, ...values }\r\n        v.number = number\r\n        v.siteId = siteId\r\n        v.key = siteId\r\n        const newData = [...dataSource, v]\r\n        const { useTime } = values\r\n        const site = { siteId, useTime, number }\r\n        this.props.addSite(site)\r\n        this.setState({ showStatus: 0, dataSource: newData, number: number + 1 })\r\n    }\r\n\r\n    handleDelete = (number) => {\r\n        const dataSource = [...this.state.dataSource];\r\n        const newDataSource = dataSource.filter((item) => {\r\n            if (item.number !== number) {\r\n                if (item.number > number) {\r\n                    --item.number\r\n                }\r\n                return item\r\n            }\r\n        })\r\n        this.props.deleteSite(number)\r\n        if (newDataSource.length === 0) this.setState({ count: 1 })\r\n        this.setState({\r\n            dataSource: newDataSource,\r\n        });\r\n    }\r\n\r\n    // 处理选中站点\r\n    handleSelect = (_, value) => {\r\n        this.setState({ siteId: value.key })\r\n    }\r\n    componentDidMount() {\r\n        let { siteList } = this.props\r\n        if (!siteList) return\r\n        let { number } = this.state\r\n        const newList = siteList.map((item, _) => {\r\n            item.number = number\r\n            number++\r\n            item.useTime = item.timeConsume\r\n            return item\r\n        })\r\n        this.setState({ dataSource: newList, number })\r\n    }\r\n    render() {\r\n\r\n        let { showStatus, dataSource, sites } = this.state\r\n\r\n        const columns = [\r\n            {\r\n                title: '序号',\r\n                dataIndex: 'number',\r\n                key: '1',\r\n                align: 'center',\r\n            },\r\n            {\r\n                title: '到达城市',\r\n                dataIndex: 'siteName',\r\n                key: '2',\r\n                align: 'center',\r\n            },\r\n            {\r\n                title: '用时（分）',\r\n                dataIndex: 'useTime',\r\n                key: '3',\r\n                align: 'center',\r\n            }\r\n            ,\r\n            {\r\n                title: '操作',\r\n                key: '4',\r\n                align: 'center',\r\n                render: (_, record) =>\r\n                    this.state.dataSource.length >= 1 ? (\r\n                        <div>\r\n                            <Popconfirm title=\"确定删除吗\" onConfirm={() => this.handleDelete(record.number)}>\r\n                                <LinkButton >删除</LinkButton>\r\n                            </Popconfirm>\r\n                        </div>\r\n                    ) : null,\r\n            }\r\n        ];\r\n\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <Card\r\n                        title={<Divider orientation=\"left\" plain>\r\n                            <Button shape='round'>站点信息</Button>\r\n                        </Divider>}\r\n                        size='small'\r\n                        extra={<Button onClick={this.addSite} icon={<PlusOutlined />} type=\"primary\" style={{ marginRight: '20px' }}></Button>}\r\n                    >\r\n                        <Table\r\n                            columns={columns}\r\n                            dataSource={dataSource}\r\n                            bordered\r\n                            rowKey=\"number\"\r\n                            pagination={false}\r\n                        />\r\n                    </Card>\r\n                </div>\r\n                {/* 添加车厢信息的模态窗口 */}\r\n                <div>\r\n                    <Modal\r\n                        title=\"添加车厢信息\"\r\n                        visible={showStatus === 1}\r\n                        onOk={this.handleAdd}\r\n                        onCancel={this.handleCancel}\r\n                        footer={[]}\r\n                        width='800px'\r\n                        style={{ top: 100 }}\r\n                        destroyOnClose='true'\r\n                    >\r\n                        <Form\r\n                            layout=\"vertical\"\r\n                            onFinish={this.onFinish}\r\n                        >\r\n                            <Form.Item\r\n                                name=\"siteName\"\r\n                                label=\"站点\"\r\n                                rules={[{ required: true, message: '请选择站点' }]}\r\n\r\n                            >\r\n                                <Select\r\n                                    showSearch\r\n                                    placeholder=\"可以搜索站点\"\r\n                                    filterOption={(input, option) =>\r\n                                        option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                                    }\r\n                                    onSelect={this.handleSelect}\r\n                                >\r\n                                    {sites.map((item, _) => {\r\n                                        return <Option key={item.id} value={item.siteName}>{item.siteName}</Option>\r\n                                    })}\r\n                                </Select>\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name=\"useTime\"\r\n                                label=\"用时\"\r\n                                rules={[{ required: true, message: '请输入用时' }]}\r\n\r\n                            >\r\n                                <Input placeholder=\"请输入用时\" />\r\n                            </Form.Item>\r\n                            <div\r\n                                style={{\r\n                                    textAlign: 'right',\r\n                                    marginTop: '50px'\r\n                                }}\r\n                            >\r\n                                <Space size=\"large\">\r\n                                    <Button onClick={this.handleCancel} style={{ marginRight: 8 }}>\r\n                                        取消\r\n                                    </Button>\r\n                                    <Button type=\"primary\" htmlType=\"submit\">\r\n                                        确认\r\n                                    </Button>\r\n                                </Space>\r\n\r\n                            </div>\r\n                        </Form>\r\n                    </Modal>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","E:\\React\\workspace\\order-ticket\\src\\pages\\Dev\\Site\\index.jsx",["195"],"import React, { Component } from 'react'\r\nimport {\r\n    Input, List, Card, Pagination,\r\n    Drawer, Form, Button, Col, Row, Space, Select, message\r\n} from 'antd';\r\nimport {\r\n    PlusOutlined\r\n} from '@ant-design/icons';\r\nimport './site.css'\r\nimport { addSite, listSite } from '../../../api/dev/site'\r\n\r\nconst { Search } = Input\r\nconst { Option } = Select\r\n\r\nexport default class Site extends Component {\r\n\r\n    state = {\r\n        visible: false,\r\n        siteList: [],\r\n        curPage: 1,\r\n        totalCount: 0,\r\n        pageSize: 5\r\n    }\r\n\r\n    onSearch = (value) => {\r\n        const { curPage, pageSize } = this.state\r\n        this.getSiteList(curPage, pageSize, value)\r\n    }\r\n    // 打开抽屉\r\n    showDrawer = () => {\r\n        this.setState({\r\n            visible: true,\r\n        });\r\n    }\r\n    // 关闭抽屉\r\n    onClose = () => {\r\n        this.setState({\r\n            visible: false,\r\n        });\r\n    }\r\n\r\n    onFinish = async (values) => {\r\n        this.setState({ visible: false })\r\n        const site = { ...values }\r\n        const result = await addSite(site)\r\n        if (result.code === 1) {\r\n            message.success('添加成功！')\r\n        } else {\r\n            message.error(result.msg)\r\n        }\r\n    }\r\n\r\n    // 组件挂载完毕的时候去拉数据库，获取站点列表\r\n    componentDidMount() {\r\n        const { curPage, pageSize } = this.state\r\n        this.getSiteList(curPage, pageSize)\r\n    }\r\n\r\n    async getSiteList(pageNum, pageSize, key) {\r\n        const result = await listSite(pageNum, pageSize,key)\r\n        if (result.code === 1) {\r\n            this.setState({\r\n                siteList: result.data,\r\n                totalCount: result.totalCount,\r\n                pageSize: result.pageSize\r\n            })\r\n        } else {\r\n            message.error(result.msg)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { siteList, totalCount, pageSize } = this.state\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <div>\r\n                        <Card\r\n                            title={<span style={{ fontSize: '30px' }}>车厢管理</span>}\r\n                            extra={<Button icon={<PlusOutlined />} type=\"primary\" onClick={this.showDrawer} >新增</Button>}\r\n                        >\r\n                            <Search style={{ width: '300px' }} placeholder=\"名称、首字母、简拼\" onSearch={this.onSearch} enterButton />\r\n                            <br />\r\n                            <br />\r\n                            <List\r\n                                className=\"site-list\"\r\n                                grid={{ gutter: 16, column: 4 }}\r\n                                pagination={{\r\n                                    onChange: page => {\r\n                                        this.getSiteList(page, pageSize)\r\n                                    },\r\n                                    pageSize: pageSize,\r\n                                    total: totalCount,\r\n                                }}\r\n                                dataSource={siteList}\r\n                                renderItem={item => (\r\n                                    <List.Item>\r\n                                        <Card style={{ textAlign: 'center' }}>{item.siteName}</Card>\r\n                                    </List.Item>\r\n                                )}\r\n\r\n                            />\r\n                        </Card>\r\n                    </div>\r\n                </div>\r\n                {/* 新增的抽屉 */}\r\n                <div>\r\n                    <Drawer\r\n                        title=\"新建站点\"\r\n                        width={550}\r\n                        onClose={this.onClose}\r\n                        visible={this.state.visible}\r\n                        bodyStyle={{ paddingBottom: 80 }}\r\n                    >\r\n                        <Form\r\n                            layout=\"vertical\"\r\n                            onFinish={this.onFinish}\r\n                        >\r\n                            <Row gutter={16}>\r\n                                <Col span={12}>\r\n                                    <Form.Item\r\n                                        name=\"siteName\"\r\n                                        label=\"站点名称\"\r\n                                        rules={[{ required: true, message: '请输入站点名称' }]}\r\n                                        required=\"true\"\r\n                                    >\r\n                                        <Input placeholder=\"请输入站点名称\" />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row gutter={16}>\r\n                                <Col span={12}>\r\n                                    <Form.Item\r\n                                        name=\"initials\"\r\n                                        label=\"首字母\"\r\n                                        rules={[{ required: true, message: '请输入首字母' }]}\r\n                                    >\r\n                                        <Select placeholder=\"请输入首字母\" >\r\n                                            <Option value=\"A\">A</Option>\r\n                                            <Option value=\"B\">B</Option>\r\n                                            <Option value=\"C\">C</Option>\r\n                                            <Option value=\"D\">D</Option>\r\n                                            <Option value=\"E\">E</Option>\r\n                                            <Option value=\"F\">F</Option>\r\n                                            <Option value=\"G\">G</Option>\r\n                                            <Option value=\"H\">H</Option>\r\n                                            <Option value=\"I\">I</Option>\r\n                                            <Option value=\"J\">J</Option>\r\n                                            <Option value=\"K\">K</Option>\r\n                                            <Option value=\"L\">L</Option>\r\n                                            <Option value=\"M\">M</Option>\r\n                                            <Option value=\"N\">N</Option>\r\n                                            <Option value=\"O\">O</Option>\r\n                                            <Option value=\"P\">P</Option>\r\n                                            <Option value=\"Q\">Q</Option>\r\n                                            <Option value=\"R\">R</Option>\r\n                                            <Option value=\"S\">S</Option>\r\n                                            <Option value=\"T\">T</Option>\r\n                                            <Option value=\"U\">U</Option>\r\n                                            <Option value=\"V\">V</Option>\r\n                                            <Option value=\"W\">W</Option>\r\n                                            <Option value=\"X\">X</Option>\r\n                                            <Option value=\"Y\">Y</Option>\r\n                                            <Option value=\"Z\">Z</Option>\r\n                                        </Select>\r\n                                    </Form.Item>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row gutter={16}>\r\n                                <Col span={12}>\r\n                                    <Form.Item\r\n                                        name=\"abbreviation\"\r\n                                        label=\"简拼\"\r\n                                        rules={[{ required: true, message: '请输入简拼' }]}\r\n                                    >\r\n                                        <Input placeholder=\"请输入简拼\" />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row gutter={16}>\r\n                                <Col span={12}>\r\n                                    <Form.Item\r\n                                        name=\"longitude\"\r\n                                        label=\"经度\"\r\n                                        rules={[{ required: true, message: '请输入经度' }]}\r\n                                    >\r\n                                        <Input placeholder=\"请输入经度\" />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row gutter={16}>\r\n                                <Col span={12}>\r\n                                    <Form.Item\r\n                                        name=\"latitude\"\r\n                                        label=\"纬度\"\r\n                                        rules={[{ required: true, message: '请输入纬度' }]}\r\n                                    >\r\n                                        <Input placeholder=\"请输入纬度\" />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                            </Row>\r\n                            <div\r\n                                style={{\r\n                                    textAlign: 'right',\r\n                                    marginTop: '50px'\r\n                                }}\r\n                            >\r\n                                <Space size=\"large\">\r\n                                    <Button onClick={this.onClose} style={{ marginRight: 8 }}>\r\n                                        取消\r\n                                    </Button>\r\n                                    <Button type=\"primary\" htmlType=\"submit\">\r\n                                        确认\r\n                                    </Button>\r\n                                </Space>\r\n\r\n                            </div>\r\n                        </Form>\r\n                    </Drawer>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","E:\\React\\workspace\\order-ticket\\src\\pages\\Dev\\index.jsx",[],"E:\\React\\workspace\\order-ticket\\src\\pages\\User\\index.jsx",[],"E:\\React\\workspace\\order-ticket\\src\\pages\\User\\TicketList\\index.jsx",["196","197"],"E:\\React\\workspace\\order-ticket\\src\\pages\\User\\Search\\index.jsx",["198"],"import { Form, Input, Space, Button, Card, DatePicker, message, Select } from 'antd'\r\nimport React, { Component } from 'react'\r\nimport moment from 'moment';\r\nimport { getSiteList } from '../../../api/dev/train';\r\nimport { moreTicket } from '../../../api/user/search';\r\n\r\nconst { Option } = Select\r\nconst format = \"YYYY-MM-DD\"\r\nexport default class Search extends Component {\r\n\r\n    state = {\r\n        siteList: []\r\n    }\r\n\r\n    // 设置不可选中时间\r\n    disabledDate = (current) => {\r\n        return current && current < moment().subtract(1, 'days')\r\n    }\r\n\r\n    // 查询\r\n    onFinish = async (values) => {\r\n        let { startTime, startId, endId } = values\r\n        startTime = moment(startTime).format(format)\r\n        const result = await moreTicket(startId, endId, startTime)\r\n        if (result.code === 1) {\r\n            this.props.history.push({ pathname: \"/user/ticketList\", state: result.data })\r\n        } else {\r\n            message.error(result.msg)\r\n        }\r\n\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const result = await getSiteList()\r\n        if (result.code === 1) {\r\n            this.setState({ siteList: result.data })\r\n        } else {\r\n            message.error(result.msg)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { siteList } = this.state\r\n        return (\r\n            <div>\r\n                <Card\r\n                    bordered={false}\r\n                >\r\n                    <Form\r\n                        layout=\"horizontal\"\r\n                        onFinish={this.onFinish}\r\n                        labelCol={{ span: 2 }}\r\n                        wrapperCol={{ span: 8 }}\r\n                        style={{ marginLeft: '200px', marginTop: '50px' }}\r\n                    >\r\n\r\n                        <Form.Item\r\n                            name=\"startId\"\r\n                            label=\"出发地\"\r\n                            rules={[{ required: true, message: '请输入出发地' }]}\r\n                            required=\"true\"\r\n                        >\r\n                            <Select\r\n                                showSearch\r\n                                placeholder=\"可以搜索站点\"\r\n                                filterOption={(input, option) =>\r\n                                    option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                                }\r\n                            >\r\n                                {siteList.map((item, _) => {\r\n                                    return <Option key={item.id} value={item.id}>{item.siteName}</Option>\r\n                                })}\r\n                            </Select>\r\n                        </Form.Item>\r\n\r\n\r\n                        <Form.Item\r\n                            name=\"endId\"\r\n                            label=\"目的地\"\r\n                            rules={[{ required: true, message: '请输入目的地' }]}\r\n                        >\r\n                            <Select\r\n                                showSearch\r\n                                placeholder=\"可以搜索站点\"\r\n                                filterOption={(input, option) =>\r\n                                    option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                                }\r\n                            >\r\n                                {siteList.map((item, _) => {\r\n                                    return <Option key={item.id} value={item.id}>{item.siteName}</Option>\r\n                                })}\r\n                            </Select>\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            name=\"startTime\"\r\n                            label=\"出发日期\"\r\n                            rules={[{ required: true, message: '请选择出发日期' }]}\r\n                        >\r\n                            <DatePicker\r\n                                format=\"YYYY-MM-DD\"\r\n                                disabledDate={this.disabledDate}\r\n                            />\r\n                        </Form.Item>\r\n\r\n                        <div\r\n                            style={{\r\n                                textAlign: 'right',\r\n                                marginTop: '20px',\r\n                                marginRight: '650px'\r\n                            }}\r\n                        >\r\n                            <Space size=\"large\">\r\n                                <Button size=\"large\" shape=\"round\" htmlType=\"reset\" style={{ marginRight: 100 }}>\r\n                                    重置\r\n                                </Button>\r\n                                <Button size=\"large\" shape=\"round\" htmlType=\"submit\" type=\"primary\" style={{ marginRight: 350 }}>\r\n                                    查询\r\n                                </Button>\r\n                            </Space>\r\n                        </div>\r\n                    </Form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","E:\\React\\workspace\\order-ticket\\src\\pages\\User\\Register\\index.jsx",[],"E:\\React\\workspace\\order-ticket\\src\\pages\\Dev\\Home\\index.jsx",[],"E:\\React\\workspace\\order-ticket\\src\\pages\\Dev\\Login\\index.jsx",[],"E:\\React\\workspace\\order-ticket\\src\\pages\\User\\Login\\index.jsx",[],"E:\\React\\workspace\\order-ticket\\src\\pages\\User\\OrderTicket\\index.jsx",["199","200","201","202","203"],"E:\\React\\workspace\\order-ticket\\src\\pages\\User\\OrderInfo\\index.jsx",["204","205","206"],"E:\\React\\workspace\\order-ticket\\src\\pages\\User\\Complete\\index.jsx",[],"E:\\React\\workspace\\order-ticket\\src\\pages\\User\\Center\\index.jsx",[],"E:\\React\\workspace\\order-ticket\\src\\components\\DevLeftNav\\index.jsx",[],"E:\\React\\workspace\\order-ticket\\src\\components\\UserLeftNav\\index.jsx",[],"E:\\React\\workspace\\order-ticket\\src\\pages\\User\\Home\\index.jsx",[],"E:\\React\\workspace\\order-ticket\\src\\pages\\User\\MyOrder\\index.jsx",["207"],"import React, { Component } from 'react'\r\nimport moment from 'moment';\r\nimport {\r\n    Input, Table, Card, Form, Button, Col, Row, Select, DatePicker, message\r\n} from 'antd'\r\nimport { Link } from 'react-router-dom'\r\nimport storageUtils from '../../../utils/storageUtils'\r\nimport { getMyOrderList } from '../../../api/user/user';\r\n\r\nconst { Option } = Select\r\nconst { RangePicker } = DatePicker\r\nconst format = \"YYYY-MM-DD\"\r\nexport default class MyOrder extends Component {\r\n    state = {\r\n        pageNum: 1,\r\n        pageSize: 5,\r\n        dataSource: [],\r\n        totalCount: 0\r\n    }\r\n    async componentDidMount() {\r\n        const { pageNum, pageSize } = this.state\r\n        this.getMyOrderList(pageNum, pageSize)\r\n    }\r\n\r\n    async getMyOrderList(pageNum, pageSize, startDate, endDate, type, orderState) {\r\n        const user = storageUtils.getUser()\r\n        const result = await getMyOrderList(user.id, pageNum, pageSize, startDate, endDate, type, orderState)\r\n        if (result.code === 1) {\r\n            this.setState({ dataSource: result.data, totalCount: result.totalCount })\r\n        } else {\r\n            message.error(result.msg)\r\n        }\r\n    }\r\n\r\n    search = (values) => {\r\n        const { orderState, type, date } = values\r\n        let startDate\r\n        let endDate\r\n        if (date) {\r\n            startDate = moment(date[0]).format(format)\r\n            endDate = moment(date[1]).format(format)\r\n        }\r\n        const { pageNum, pageSize } = this.state\r\n        this.getMyOrderList(pageNum, pageSize, startDate, endDate, type, orderState)\r\n    }\r\n\r\n    render() {\r\n        const { dataSource, pageSize, totalCount } = this.state\r\n        const user = storageUtils.getUser()\r\n        const columns = [\r\n            {\r\n                title: '车次',\r\n                key: '1',\r\n                dataIndex: 'trainNumber',\r\n                align: 'center',\r\n            },\r\n            {\r\n                title: '始发地',\r\n                dataIndex: 'startName',\r\n                key: '2',\r\n                align: 'center',\r\n            },\r\n            {\r\n                title: '终点站',\r\n                dataIndex: 'endName',\r\n                key: '3',\r\n                align: 'center',\r\n            },\r\n            {\r\n                title: '出发时间',\r\n                dataIndex: 'startDateTime',\r\n                key: '4',\r\n                align: 'center',\r\n                render: (_, record) => {\r\n                    return record.startDate + \" \" + record.startTime\r\n                }\r\n            },\r\n            {\r\n                title: '到达时间',\r\n                dataIndex: 'endDateTime',\r\n                key: '5',\r\n                align: 'center',\r\n                render: (_, record) => {\r\n                    return record.endDate + \" \" + record.endTime\r\n                }\r\n            },\r\n            {\r\n                title: '级别',\r\n                key: '6',\r\n                dataIndex: 'levelCar',\r\n                align: 'center',\r\n                render: (record) => {\r\n                    return record === 1 ? '豪华' : (record === 2 ? '普通' : '经济')\r\n                }\r\n            },\r\n            {\r\n                title: '车厢',\r\n                key: '7',\r\n                dataIndex: 'carriageOrder',\r\n                align: 'center',\r\n            },\r\n            {\r\n                title: '座位号',\r\n                key: '8',\r\n                dataIndex: 'seatNumber',\r\n                align: 'center',\r\n            },\r\n            {\r\n                title: '乘车人',\r\n                key: '9',\r\n                dataIndex: 'passengerName',\r\n                align: 'center',\r\n            },\r\n            {\r\n                title: '身份证',\r\n                key: '10',\r\n                dataIndex: 'passengerCard',\r\n                align: 'center',\r\n            },\r\n            {\r\n                title: '订单状态',\r\n                key: '11',\r\n                dataIndex: 'orderStatus',\r\n                align: 'center',\r\n                render: (record) => {\r\n                    return record === 0 ? '未支付' : (record === 1 ? '已支付' : '已取消')\r\n                }\r\n            },\r\n        ]\r\n        return (\r\n            <div>\r\n                <div>\r\n                    {\r\n                        Object.keys(user).length === 0 ?\r\n                            <span>请先<Link to=\"/user/login\">登录</Link></span> :\r\n                            <Card>\r\n                                <div>\r\n                                    <Form\r\n                                        layout=\"inline\"\r\n                                        onFinish={this.search}\r\n                                    >\r\n                                        <Row gutter={16}>\r\n                                            <Col span={12}>\r\n                                                <Form.Item\r\n                                                    name=\"date\"\r\n                                                >\r\n                                                    <RangePicker />\r\n                                                </Form.Item>\r\n                                            </Col>\r\n                                            <Col span={6}>\r\n                                                <Form.Item\r\n                                                    name=\"type\"\r\n                                                >\r\n                                                    <Select placeholder=\"座位类别\">\r\n                                                        <Option value={1}>豪华</Option>\r\n                                                        <Option value={2}>普通</Option>\r\n                                                        <Option value={3}>经济</Option>\r\n                                                    </Select>\r\n                                                </Form.Item>\r\n                                            </Col>\r\n                                            <Col span={6}>\r\n                                                <Form.Item\r\n                                                    name=\"orderState\"\r\n                                                >\r\n                                                    <Select placeholder=\"订单状态\">\r\n                                                        <Option value={1}>已支付</Option>\r\n                                                        <Option value={0}>未支付</Option>\r\n                                                        <Option value={2}>超时取消</Option>\r\n                                                    </Select>\r\n                                                </Form.Item>\r\n                                            </Col>\r\n                                        </Row>\r\n\r\n                                        <Col span={0.3}\r\n                                            style={{ marginRight: '20px' }}\r\n                                        >\r\n                                            <Form.Item>\r\n                                                <Button type=\"primary\" htmlType='submit' shape=\"round\" >查询</Button>\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                        <Col span={1}\r\n                                        >\r\n                                            <Form.Item>\r\n                                                <Button shape=\"round\" htmlType='reset' >重置</Button>\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                    </Form>\r\n                                </div>\r\n                                {\r\n                                    dataSource.length === 0 ? null : <div style={{ marginTop: '20px' }}>\r\n                                        <Table\r\n                                            columns={columns}\r\n                                            dataSource={dataSource}\r\n                                            bordered\r\n                                            rowKey=\"id\"\r\n                                            pagination={{\r\n                                                onChange: page => {\r\n                                                    this.getMyOrderList(page, pageSize)\r\n                                                },\r\n                                                pageSize: pageSize,\r\n                                                total: totalCount,\r\n                                            }}\r\n                                        />\r\n                                    </div>\r\n                                }\r\n                            </Card>\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","E:\\React\\workspace\\order-ticket\\src\\pages\\User\\Passenger\\index.jsx",["208","209"],"import React, { Component } from 'react'\r\nimport {\r\n    Input, Card, Table,\r\n    Drawer, Form, Button, Col, Row, Space, message, Radio, Popconfirm\r\n} from 'antd';\r\nimport {\r\n    PlusOutlined\r\n} from '@ant-design/icons';\r\nimport LinkButton from '../../../components/LinkButton';\r\nimport { addPassenger, deletePassenger, editPassenger, getPassengerList } from '../../../api/user/user';\r\nimport storageUtils from '../../../utils/storageUtils'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default class PlatForm extends Component {\r\n    myForm = React.createRef()\r\n    state = {\r\n        totalCount: 0,\r\n        showStatus: 0,\r\n        count: 0,\r\n        dataSource: [],\r\n        passengerInfo: {}\r\n    }\r\n\r\n    // 打开添加抽屉\r\n    showAddUser = () => {\r\n        this.setState({ visible: 1 })\r\n    }\r\n\r\n    // 关闭抽屉\r\n    onClose = () => {\r\n        this.setState({ visible: 0 })\r\n        this.myForm.current.resetFields()\r\n    }\r\n\r\n    // 添加用户\r\n    addPassenger = async (values) => {\r\n        const { name, idCard, phone } = values\r\n        const user = storageUtils.getUser()\r\n        const result = await addPassenger(phone, name, idCard, user.id)\r\n        if (result.code === 1) {\r\n            message.success('添加成功')\r\n            this.getPassengerList()\r\n            this.setState({ visible: 0 })\r\n            this.myForm.current.resetFields()\r\n        } else {\r\n            message.error(result.msg)\r\n        }\r\n\r\n    }\r\n\r\n    // 打开编辑的抽屉\r\n    showUpdateUser = (record) => {\r\n        this.setState({ visible: 2, passengerInfo: record })\r\n    }\r\n\r\n    updateUser = async (values) => {\r\n        const { phone, name, idCard, id } = values\r\n        const user = storageUtils.getUser()\r\n        const result = await editPassenger(phone, name, idCard, id)\r\n        if (result.code === 1) {\r\n            message.success('编辑成功')\r\n            this.getPassengerList()\r\n            this.setState({ visible: 0 })\r\n            this.myForm.current.resetFields()\r\n        }\r\n\r\n    }\r\n\r\n    handleDelete = async (id) => {\r\n        const result = await deletePassenger(id)\r\n        if (result.code === 1) {\r\n            message.success('删除成功')\r\n            this.getPassengerList()\r\n        } else {\r\n            message.error(result.msg)\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getPassengerList()\r\n    }\r\n\r\n    async getPassengerList() {\r\n        const user = storageUtils.getUser()\r\n        if (Object.keys(user).length === 0) return\r\n        const result = await getPassengerList(user.id)\r\n        if (result.code === 1) {\r\n            this.setState({ dataSource: result.data })\r\n        } else {\r\n            message.error(result.msg)\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        const { visible, dataSource, passengerInfo, pageSize, totalCount } = this.state\r\n        const user = storageUtils.getUser()\r\n        const columns = [\r\n            {\r\n                title: '姓名',\r\n                dataIndex: 'passengerName',\r\n                key: '1',\r\n                align: 'center',\r\n            },\r\n            {\r\n                title: '身份证',\r\n                dataIndex: 'passengerCard',\r\n                key: '2',\r\n                align: 'center',\r\n            },\r\n            {\r\n                title: '手机号码',\r\n                dataIndex: 'passengerPhone',\r\n                key: '3',\r\n                align: 'center',\r\n            },\r\n            {\r\n                title: '操作',\r\n                key: '4',\r\n                render: (_, record) => (\r\n                    <Space size=\"middle\">\r\n                        <LinkButton onClick={() => { this.showUpdateUser(record) }}>编辑</LinkButton>\r\n                        <Popconfirm title=\"确定删除吗\" onConfirm={() => this.handleDelete(record.id)}>\r\n                            <LinkButton >删除</LinkButton>\r\n                        </Popconfirm>\r\n                    </Space>\r\n                ),\r\n                align: 'center'\r\n            },\r\n        ]\r\n        return (\r\n            <div>\r\n                {\r\n                    Object.keys(user).length === 0 ?\r\n                        <span>请先<Link to=\"/user/login\">登录</Link></span> :\r\n                        <div>\r\n                            <div>\r\n                                <Card\r\n                                    extra={\r\n                                        <Button icon={<PlusOutlined />} type=\"primary\" onClick={this.showAddUser}>新增</Button>\r\n                                    }\r\n                                >\r\n                                    <Table\r\n                                        columns={columns}\r\n                                        dataSource={dataSource}\r\n                                        bordered\r\n                                        rowKey=\"key\"\r\n                                        pagination={{\r\n                                            pageSize: pageSize,\r\n                                            total: totalCount,\r\n                                        }}\r\n                                    />\r\n                                </Card>\r\n                            </div>\r\n                            {/* 新增的抽屉 */}\r\n                            <div>\r\n                                <Drawer\r\n                                    title=\"新增用户\"\r\n                                    width={500}\r\n                                    onClose={this.onClose}\r\n                                    visible={visible === 1}\r\n                                    bodyStyle={{ paddingBottom: 80 }}\r\n                                >\r\n                                    <Form\r\n                                        layout=\"vertical\"\r\n                                        onFinish={this.addPassenger}\r\n                                        ref={this.myForm}\r\n                                    >\r\n                                        <Row gutter={16}>\r\n                                            <Col span={12}>\r\n                                                <Form.Item\r\n                                                    name=\"name\"\r\n                                                    label=\"姓名\"\r\n                                                    rules={[{ required: true, message: '请输入姓名!' }]}\r\n                                                >\r\n                                                    <Input autoComplete=\"off\" placeholder=\"请输入姓名\" />\r\n                                                </Form.Item>\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <Row gutter={16}>\r\n                                            <Col span={12}>\r\n                                                <Form.Item\r\n                                                    name=\"idCard\"\r\n                                                    label=\"身份证\"\r\n                                                    rules={[{ required: true, message: '请输入身份证!' }]}\r\n                                                >\r\n                                                    <Input maxLength={18} autoComplete=\"off\" placeholder=\"请输入身份证\" />\r\n                                                </Form.Item>\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <Row gutter={16}>\r\n                                            <Col span={12}>\r\n                                                <Form.Item\r\n                                                    name=\"phone\"\r\n                                                    label=\"手机号码\"\r\n                                                    rules={[{ required: true, message: '请输入手机号码!' }]}\r\n                                                    required=\"true\"\r\n                                                >\r\n                                                    <Input maxLength={11} autoComplete=\"off\" placeholder=\"请输入手机号码\" />\r\n                                                </Form.Item>\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <div\r\n                                            style={{\r\n                                                textAlign: 'right',\r\n                                                marginTop: '50px'\r\n                                            }}\r\n                                        >\r\n                                            <Space size=\"large\">\r\n                                                <Button onClick={this.onClose} style={{ marginRight: 8 }}>\r\n                                                    取消\r\n                                                </Button>\r\n                                                <Button type=\"primary\" htmlType=\"submit\">\r\n                                                    确认\r\n                                                </Button>\r\n                                            </Space>\r\n\r\n                                        </div>\r\n                                    </Form>\r\n                                </Drawer>\r\n                            </div>\r\n                            {/* 编辑的抽屉 */}\r\n                            <div>\r\n                                <Drawer\r\n                                    title=\"编辑用户\"\r\n                                    width={500}\r\n                                    onClose={this.onClose}\r\n                                    visible={visible === 2}\r\n                                    bodyStyle={{ paddingBottom: 80 }}\r\n                                >\r\n                                    <Form\r\n                                        layout=\"vertical\"\r\n                                        onFinish={this.updateUser}\r\n                                        ref={this.myForm}\r\n                                    >\r\n                                        <Row gutter={16}>\r\n                                            <Col span={12}>\r\n                                                <Form.Item\r\n                                                    name=\"name\"\r\n                                                    label=\"姓名\"\r\n                                                    rules={[{ required: true, message: '请输入姓名!' }]}\r\n                                                    initialValue={passengerInfo.passengerName}\r\n                                                >\r\n                                                    <Input autoComplete=\"off\" placeholder=\"请输入姓名\" />\r\n                                                </Form.Item>\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <Row gutter={16}>\r\n                                            <Col span={12}>\r\n                                                <Form.Item\r\n                                                    name=\"idCard\"\r\n                                                    label=\"身份证\"\r\n                                                    rules={[{ required: true, message: '请输入身份证!' }]}\r\n                                                    initialValue={passengerInfo.passengerCard}\r\n                                                >\r\n                                                    <Input maxLength={18} autoComplete=\"off\" placeholder=\"请输入身份证\" />\r\n                                                </Form.Item>\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <Row gutter={16}>\r\n                                            <Col span={12}>\r\n                                                <Form.Item\r\n                                                    name=\"phone\"\r\n                                                    label=\"手机号码\"\r\n                                                    rules={[{ required: true, message: '请输入手机号码!' }]}\r\n                                                    required=\"true\"\r\n                                                    initialValue={passengerInfo.passengerPhone}\r\n                                                >\r\n                                                    <Input maxLength={11} autoComplete=\"off\" placeholder=\"请输入手机号码\" />\r\n                                                </Form.Item>\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <Row gutter={16}>\r\n                                            <Col span={12}>\r\n                                                <Form.Item\r\n                                                    name=\"id\"\r\n                                                    initialValue={passengerInfo.id}\r\n                                                >\r\n                                                    <Input hidden={true} />\r\n                                                </Form.Item>\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <div\r\n                                            style={{\r\n                                                textAlign: 'right',\r\n                                                marginTop: '50px'\r\n                                            }}\r\n                                        >\r\n                                            <Space size=\"large\">\r\n                                                <Button onClick={this.onClose} style={{ marginRight: 8 }}>\r\n                                                    取消\r\n                                                </Button>\r\n                                                <Button type=\"primary\" htmlType=\"submit\">\r\n                                                    确认\r\n                                                </Button>\r\n                                            </Space>\r\n\r\n                                        </div>\r\n                                    </Form>\r\n                                </Drawer>\r\n                            </div>\r\n                        </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","E:\\React\\workspace\\order-ticket\\src\\utils\\MemoryUser\\index.jsx",["210"],"E:\\React\\workspace\\order-ticket\\src\\utils\\storageUtils\\index.jsx",["211"],"import store from 'store'\r\nconst ADMIN_KEY = 'admin_key'\r\nconst ADMIN_TOKEN_KEY = 'admin_token_key'\r\n\r\nconst USER_KEY = 'user_key'\r\nconst USER_TOKEN_KEY = 'user_token_key'\r\nexport default {\r\n    // 保存admin\r\n    saveAdmin(admin) {\r\n        store.set(ADMIN_KEY, admin)\r\n    },\r\n    // 读取admin\r\n    getAdmin() {\r\n        return store.get(ADMIN_KEY) || {}\r\n    },\r\n\r\n    // 删除user\r\n    removeAdmin() {\r\n        store.remove(ADMIN_KEY)\r\n    },\r\n\r\n    // 保存token\r\n    saveAdminToken(token) {\r\n        store.set(ADMIN_TOKEN_KEY, token)\r\n    },\r\n    getAdminToken() {\r\n        return store.get(ADMIN_TOKEN_KEY)\r\n    },\r\n    removeAdminToken() {\r\n        store.remove(ADMIN_TOKEN_KEY)\r\n    },\r\n\r\n\r\n    saveUser(user) {\r\n        store.set(USER_KEY, user)\r\n    },\r\n    getUser() {\r\n        return store.get(USER_KEY) || {}\r\n    },\r\n    removeUser() {\r\n        store.remove(USER_KEY)\r\n    },\r\n\r\n    // 保存token\r\n    saveUserToken(token) {\r\n        store.set(USER_TOKEN_KEY, token)\r\n    },\r\n    getUserToken() {\r\n        return store.get(USER_TOKEN_KEY)\r\n    },\r\n    removeUserToken() {\r\n        store.remove(USER_TOKEN_KEY)\r\n    },\r\n\r\n\r\n}","E:\\React\\workspace\\order-ticket\\src\\api\\dev\\site.js",[],"E:\\React\\workspace\\order-ticket\\src\\api\\dev\\admin.js",[],"E:\\React\\workspace\\order-ticket\\src\\api\\dev\\carriage.js",[],"E:\\React\\workspace\\order-ticket\\src\\api\\dev\\train.js",[],"E:\\React\\workspace\\order-ticket\\src\\pages\\Dev\\Trains\\Add\\index.jsx",[],"E:\\React\\workspace\\order-ticket\\src\\pages\\Dev\\Trains\\Updata\\index.jsx",["212","213"],"import React, { Component } from 'react'\r\nimport {\r\n    Input, Card,\r\n    Form, Button, Col, Row, Space, Select, TimePicker, message\r\n} from 'antd';\r\nimport moment from 'moment'\r\nimport SiteInfo from '../SiteInfo';\r\nimport CarriageInfo from '../CarriageInfo'\r\nimport MyNavLink from '../../../../components/MyNavLink'\r\nimport { updataTrain, getTrainInfo } from '../../../../api/dev/train'\r\nimport { createFromIconfontCN } from '@ant-design/icons';\r\nimport LinkButton from '../../../../components/LinkButton';\r\n\r\nconst IconFont = createFromIconfontCN({\r\n    scriptUrl: '//at.alicdn.com/t/font_2779508_d3ob7o1ykpv.js',\r\n})\r\n\r\nconst { Option } = Select\r\nconst format = 'HH:mm'\r\nexport default class TrainUpdate extends Component {\r\n\r\n    state = {\r\n        siteList: [],\r\n        carriageList: [],\r\n        carriages: [],\r\n        site: {},\r\n        isUpdata: 0,\r\n    }\r\n\r\n    deleteCarriage = (key) => {\r\n        const carriages = [...this.state.carriages];\r\n        const newDataSource = carriages.filter((item) => {\r\n            if (item.carriageOrder !== key) {\r\n                if (item.carriageOrder > key) {\r\n                    --item.carriageOrder\r\n                }\r\n                return item\r\n            }\r\n        })\r\n        const carriageIdList = newDataSource.map((item) => {\r\n            return item.carriageId\r\n        })\r\n        this.setState({\r\n            carriageList: carriageIdList,\r\n            isUpdata: 1,\r\n        });\r\n    }\r\n\r\n    deleteSite = (number) => {\r\n        const siteList = [...this.state.siteList];\r\n        const newDataSource = siteList.filter((item) => {\r\n            if (item.number !== number) {\r\n                if (item.number > number) {\r\n                    --item.number\r\n                }\r\n                return item\r\n            }\r\n        })\r\n        this.setState({\r\n            siteList: newDataSource,\r\n            isUpdata: 1,\r\n        });\r\n    }\r\n\r\n    // 判断是否修改过表单\r\n    handleIsUpdata = () => {\r\n        this.setState({ isUpdata: 1 })\r\n    }\r\n\r\n    // 更新车次\r\n    updataTrain = async (values) => {\r\n        const { siteList, carriageList, isUpdata } = this.state\r\n        if (isUpdata === 1) {\r\n            const startTime = moment(values.startTime).format('HH:mm')\r\n            const train = { ...values, startTime, siteList, carriageList }\r\n            const result = await updataTrain(train)\r\n            if (result.code === 1) {\r\n                message.success('更新成功')\r\n                this.props.history.goBack()\r\n            } else {\r\n                message.error(result.msg)\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    addSite = (site) => {\r\n        const { siteList } = this.state\r\n        const newSite = [...siteList, site]\r\n        this.setState({ siteList: newSite, isUpdata: 1, })\r\n    }\r\n\r\n    addCarriage = (carriage) => {\r\n        const { carriageList } = this.state\r\n        const newCarriage = [...carriageList, carriage]\r\n        this.setState({ carriageList: newCarriage, isUpdata: 1, })\r\n    }\r\n\r\n    async componentWillMount() {\r\n        const { id } = this.props.match.params\r\n        const result = await getTrainInfo(id)\r\n        if (result.code === 1) {\r\n            const { carriageList } = result.data\r\n            const carriageIdList = carriageList.map((item, _) => {\r\n                return item.carriageId\r\n            })\r\n            this.setState({\r\n                siteList: result.data.siteList,\r\n                carriages: result.data.carriageList,\r\n                site: result.data.baseInfo,\r\n                carriageList: carriageIdList\r\n            })\r\n        } else {\r\n            message.error(result.msg)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { siteList, carriages, site } = this.state\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <Card\r\n                        title={<span><LinkButton onClick={() => { this.props.history.goBack() }}><IconFont type=\"anticonlishi-xunchaxiangqing-jiantou\" /></LinkButton><span style={{ fontSize: '30px', marginLeft: '40px' }}>编辑车次</span></span>}\r\n                    >\r\n                        {\r\n                            Object.keys(site).length ?\r\n                                <Form\r\n                                    layout=\"vertical\"\r\n                                    onFinish={this.updataTrain}\r\n                                    onValuesChange={this.handleIsUpdata}\r\n                                >\r\n                                    <Row gutter={16}>\r\n                                        <Col span={12}>\r\n                                            <Form.Item\r\n                                                name=\"trainNumber\"\r\n                                                label=\"车次\"\r\n                                                rules={[{ required: true, message: '请输入车次' }]}\r\n                                                required=\"true\"\r\n                                                initialValue={site.trainNumber}\r\n                                            >\r\n                                                <Input placeholder=\"请输入车次\" readOnly />\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                        <Col span={12}>\r\n                                            <Form.Item\r\n                                                name=\"isReturn\"\r\n                                                label=\"返程车\"\r\n                                                rules={[{ required: true, message: '请选择是否返程' }]}\r\n                                                required=\"true\"\r\n                                                initialValue={site.isReturn}\r\n                                            >\r\n                                                <Select placeholder=\"是否返程\" >\r\n                                                    <Option value={1}>是</Option>\r\n                                                    <Option value={0}>否</Option>\r\n                                                </Select>\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row gutter={16}>\r\n                                        <Col span={12}>\r\n                                            <Form.Item\r\n                                                name=\"type\"\r\n                                                label=\"类别\"\r\n                                                rules={[{ required: true, message: '请选择类别' }]}\r\n                                                required=\"true\"\r\n                                                initialValue={site.type}\r\n                                            >\r\n                                                <Select placeholder=\"类别\">\r\n                                                    <Option value={1}>动车</Option>\r\n                                                    <Option value={2}>高铁</Option>\r\n                                                </Select>\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                        <Col span={12}>\r\n                                            <Form.Item\r\n                                                name=\"startTime\"\r\n                                                label=\"发车时间\"\r\n                                                rules={[{ required: true, message: '请选择发车时间' }]}\r\n                                                required=\"true\"\r\n                                                initialValue={moment(site.startTime, format)}\r\n                                            >\r\n                                                <TimePicker format={format} />\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row gutter={16}>\r\n                                        <Col span={12}>\r\n                                            <Form.Item\r\n                                                name=\"trainCount\"\r\n                                                label=\"班车数量\"\r\n                                                rules={[{ required: true, message: '请输入班车数量' }]}\r\n                                                initialValue={site.shift}\r\n                                            >\r\n                                                <Input placeholder=\"请输入班车数量\" />\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row gutter={16}>\r\n                                        <Col span={12}>\r\n                                            <Form.Item\r\n                                                rules={[{ required: true, message: '请输入站点信息' }]}\r\n\r\n                                            >\r\n                                                <SiteInfo addSite={this.addSite} deleteSite={this.deleteSite} siteList={siteList} />\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row gutter={16}>\r\n                                        <Col span={20}>\r\n                                            <Form.Item\r\n                                                rules={[{ required: true, message: '请输入车厢信息' }]}\r\n                                            >\r\n                                                <CarriageInfo addCarriage={this.addCarriage} deleteCarriage={this.deleteCarriage} carriageList={carriages} />\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <div\r\n                                        style={{\r\n                                            textAlign: 'right',\r\n                                            marginTop: '50px'\r\n                                        }}\r\n                                    >\r\n                                        <Space size=\"large\">\r\n                                            <MyNavLink to=\"/dev/trains\">\r\n                                                <Button style={{ marginRight: 8 }}>\r\n                                                    取消\r\n                                                </Button>\r\n                                            </MyNavLink>\r\n                                            <Button type=\"primary\" htmlType=\"submit\">\r\n                                                确认\r\n                                            </Button>\r\n                                        </Space>\r\n\r\n                                    </div>\r\n                                </Form> : null\r\n                        }\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","E:\\React\\workspace\\order-ticket\\src\\api\\dev\\order.js",[],"E:\\React\\workspace\\order-ticket\\src\\api\\user\\search.js",[],"E:\\React\\workspace\\order-ticket\\src\\api\\user\\user.js",[],"E:\\React\\workspace\\order-ticket\\src\\api\\user\\order.js",[],{"ruleId":"214","replacedBy":"215"},{"ruleId":"216","replacedBy":"217"},{"ruleId":"218","severity":1,"message":"219","line":9,"column":7,"nodeType":"220","messageId":"221","endLine":9,"endColumn":13},{"ruleId":"222","severity":1,"message":"223","line":406,"column":132,"nodeType":"224","messageId":"225","endLine":406,"endColumn":151},{"ruleId":"226","severity":1,"message":"227","line":156,"column":56,"nodeType":"228","messageId":"229","endLine":156,"endColumn":58},{"ruleId":"218","severity":1,"message":"230","line":208,"column":19,"nodeType":"220","messageId":"221","endLine":208,"endColumn":35},{"ruleId":"226","severity":1,"message":"227","line":53,"column":56,"nodeType":"228","messageId":"229","endLine":53,"endColumn":58},{"ruleId":"218","severity":1,"message":"231","line":3,"column":24,"nodeType":"220","messageId":"221","endLine":3,"endColumn":34},{"ruleId":"226","severity":1,"message":"232","line":71,"column":49,"nodeType":"228","messageId":"229","endLine":71,"endColumn":51},{"ruleId":"233","severity":1,"message":"234","line":93,"column":25,"nodeType":"235","messageId":"236","endLine":188,"endColumn":10},{"ruleId":"218","severity":1,"message":"237","line":1,"column":16,"nodeType":"220","messageId":"221","endLine":1,"endColumn":21},{"ruleId":"218","severity":1,"message":"238","line":1,"column":60,"nodeType":"220","messageId":"221","endLine":1,"endColumn":66},{"ruleId":"226","severity":1,"message":"227","line":47,"column":56,"nodeType":"228","messageId":"229","endLine":47,"endColumn":58},{"ruleId":"226","severity":1,"message":"232","line":71,"column":53,"nodeType":"228","messageId":"229","endLine":71,"endColumn":55},{"ruleId":"226","severity":1,"message":"239","line":100,"column":36,"nodeType":"228","messageId":"240","endLine":100,"endColumn":38},{"ruleId":"226","severity":1,"message":"239","line":130,"column":31,"nodeType":"228","messageId":"240","endLine":130,"endColumn":33},{"ruleId":"218","severity":1,"message":"241","line":2,"column":43,"nodeType":"220","messageId":"221","endLine":2,"endColumn":46},{"ruleId":"218","severity":1,"message":"242","line":2,"column":48,"nodeType":"220","messageId":"221","endLine":2,"endColumn":51},{"ruleId":"218","severity":1,"message":"243","line":2,"column":53,"nodeType":"220","messageId":"221","endLine":2,"endColumn":59},{"ruleId":"218","severity":1,"message":"237","line":4,"column":5,"nodeType":"220","messageId":"221","endLine":4,"endColumn":10},{"ruleId":"218","severity":1,"message":"244","line":4,"column":53,"nodeType":"220","messageId":"221","endLine":4,"endColumn":58},{"ruleId":"218","severity":1,"message":"245","line":58,"column":15,"nodeType":"220","messageId":"221","endLine":58,"endColumn":19},{"ruleId":"246","severity":1,"message":"247","line":1,"column":1,"nodeType":"248","endLine":4,"endColumn":2},{"ruleId":"246","severity":1,"message":"247","line":7,"column":1,"nodeType":"248","endLine":56,"endColumn":2},{"ruleId":"226","severity":1,"message":"227","line":32,"column":55,"nodeType":"228","messageId":"229","endLine":32,"endColumn":57},{"ruleId":"226","severity":1,"message":"227","line":51,"column":54,"nodeType":"228","messageId":"229","endLine":51,"endColumn":56},"no-native-reassign",["249"],"no-negated-in-lhs",["250"],"no-unused-vars","'format' is assigned a value but never used.","Identifier","unusedVar","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'newCarriageLists' is assigned a value but never used.","'Pagination' is defined but never used.","Array.prototype.find() expects a value to be returned at the end of arrow function.","no-sparse-arrays","Unexpected comma in middle of array.","ArrayExpression","unexpectedSparseArray","'Input' is defined but never used.","'Drawer' is defined but never used.","Array.prototype.map() expects a return value from arrow function.","expectedInside","'Row' is defined but never used.","'Col' is defined but never used.","'Select' is defined but never used.","'Radio' is defined but never used.","'user' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]
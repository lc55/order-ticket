{"ast":null,"code":"var _jsxFileName = \"E:\\\\React\\\\workspace\\\\order-ticket\\\\src\\\\pages\\\\Dev\\\\Trains\\\\CarriageInfo\\\\index.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect, useRef } from 'react';\nimport { Card, Button, Table, Modal, Space, Form, Input, Select, Popconfirm, Divider, message } from 'antd';\nimport { PlusOutlined } from '@ant-design/icons';\nimport LinkButton from '../../../../components/LinkButton';\nimport { getCarriageList } from '../../../../api/dev/train';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Option\n} = Select;\nconst EditableContext = /*#__PURE__*/React.createContext(null);\n\nconst EditableRow = ({\n  index,\n  ...props\n}) => {\n  _s();\n\n  const [form] = Form.useForm();\n  return /*#__PURE__*/_jsxDEV(Form, {\n    form: form,\n    component: false,\n    children: /*#__PURE__*/_jsxDEV(EditableContext.Provider, {\n      value: form,\n      children: /*#__PURE__*/_jsxDEV(\"tr\", { ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EditableRow, \"rI7DrJIrFu7YmlGWYiMFTzs8jF0=\", false, function () {\n  return [Form.useForm];\n});\n\n_c = EditableRow;\n\nconst EditableCell = ({\n  title,\n  editable,\n  children,\n  dataIndex,\n  record,\n  handleSave,\n  ...restProps\n}) => {\n  _s2();\n\n  const [editing, setEditing] = useState(false);\n  const inputRef = useRef(null);\n  const form = useContext(EditableContext);\n  useEffect(() => {\n    if (editing) {\n      inputRef.current.focus();\n    }\n  }, [editing]);\n\n  const toggleEdit = () => {\n    setEditing(!editing);\n    form.setFieldsValue({\n      [dataIndex]: record[dataIndex]\n    });\n  };\n\n  const save = async () => {\n    try {\n      const values = await form.validateFields();\n      toggleEdit();\n      handleSave({ ...record,\n        ...values\n      });\n    } catch (errInfo) {\n      console.log('Save failed:', errInfo);\n    }\n  };\n\n  let childNode = children;\n\n  if (editable) {\n    childNode = editing ? /*#__PURE__*/_jsxDEV(Form.Item, {\n      style: {\n        margin: 0\n      },\n      name: dataIndex,\n      rules: [{\n        required: true,\n        message: `${title}是必填的`\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        ref: inputRef,\n        onPressEnter: save,\n        onBlur: save\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editable-cell-value-wrap\",\n      style: {\n        paddingRight: 24\n      },\n      onClick: toggleEdit,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"td\", { ...restProps,\n    children: childNode\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 12\n  }, this);\n};\n\n_s2(EditableCell, \"IMw7TsWhFd8T/FybyizRtPpww8A=\");\n\n_c2 = EditableCell;\nexport default class CarriageInfo extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleDelete = key => {\n      const dataSource = [...this.state.dataSource];\n      const newDataSource = dataSource.filter(item => {\n        if (item.key !== key) {\n          if (item.key > key) {\n            --item.key;\n            --item.carriageOrder;\n          }\n\n          return item;\n        }\n      });\n      if (newDataSource.length === 0) this.setState({\n        count: 1\n      });\n      this.setState({\n        dataSource: newDataSource\n      });\n    };\n\n    this.handleAdd = async () => {\n      // 调接口拿数据\n      const result = await getCarriageList();\n\n      if (result.code === 1) {\n        const {\n          dataSource\n        } = this.state;\n        const newData = {\n          key: dataSource.length + 1,\n          carriageOrder: dataSource.length + 1,\n          carriageNumber: dataSource.carriageNumber,\n          type: dataSource.levelCar === 1 ? '豪华' : dataSource.levelCar === 2 ? '普通' : '经济',\n          seatNumber: dataSource.seatCount,\n          priceBase: dataSource.priceBase\n        };\n        this.setState({\n          dataSource: [...dataSource, newData],\n          count: dataSource.length + 1\n        });\n        this.setState({\n          showStatus: 1\n        });\n      } else {\n        message.error(result.msg);\n      }\n    };\n\n    this.handleSave = row => {\n      const newData = [...this.state.dataSource];\n      const index = newData.findIndex(item => row.key === item.key);\n      const item = newData[index];\n      newData.splice(index, 1, { ...item,\n        ...row\n      });\n      this.setState({\n        dataSource: newData\n      });\n    };\n\n    this.handleCancel = () => {\n      this.setState({\n        showStatus: 0\n      });\n    };\n\n    this.onFinish = values => {\n      message.success(\"添加成功\");\n      this.setState({\n        showStatus: 0\n      });\n    };\n\n    this.columns = [{\n      title: '车厢序号',\n      dataIndex: 'carriageOrder',\n      key: '2',\n      align: 'center'\n    }, {\n      title: '车厢编号',\n      dataIndex: 'carriageNumber',\n      key: '3',\n      align: 'center',\n      editable: true\n    }, {\n      title: '类别',\n      dataIndex: 'type',\n      key: '4',\n      align: 'center',\n      editable: true\n    }, {\n      title: '座位数',\n      dataIndex: 'seatNumber',\n      key: '5',\n      align: 'center',\n      editable: true\n    }, {\n      title: '价格基数',\n      dataIndex: 'priceBase',\n      key: '6',\n      align: 'center',\n      editable: true\n    }, {\n      title: '操作',\n      align: 'center',\n      render: (_, record) => this.state.dataSource.length >= 1 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Popconfirm, {\n          title: \"\\u786E\\u5B9A\\u5220\\u9664\\u5417\",\n          onConfirm: () => this.handleDelete(record.key),\n          children: /*#__PURE__*/_jsxDEV(LinkButton, {\n            children: \"\\u5220\\u9664\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 33\n          }, void 0)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 29\n        }, void 0)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 25\n      }, void 0) : null\n    }];\n    this.state = {\n      dataSource: [// {\n        //     key: '1',\n        //     carriageOrder: 1,\n        //     carriageNumber: '001',\n        //     type: '动车',\n        //     seatNumber: 40,\n        //     priceBase: 5,\n        // },\n        // {\n        //     key: '2',\n        //     carriageOrder: 2,\n        //     carriageNumber: '001',\n        //     type: '动车',\n        //     seatNumber: 40,\n        //     priceBase: 5,\n        // },\n      ],\n      count: 1,\n      showStatus: 0\n    };\n  }\n\n  render() {\n    const {\n      dataSource,\n      showStatus\n    } = this.state;\n    const components = {\n      body: {\n        row: EditableRow,\n        cell: EditableCell\n      }\n    };\n    const columns = this.columns.map(col => {\n      if (!col.editable) {\n        return col;\n      }\n\n      return { ...col,\n        onCell: record => ({\n          record,\n          editable: col.editable,\n          dataIndex: col.dataIndex,\n          title: col.title,\n          handleSave: this.handleSave\n        })\n      };\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          title: /*#__PURE__*/_jsxDEV(Divider, {\n            orientation: \"left\",\n            plain: true,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              shape: \"round\",\n              children: \"\\u8F66\\u53A2\\u4FE1\\u606F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 32\n          }, this),\n          size: \"small\",\n          extra: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: this.handleAdd,\n            icon: /*#__PURE__*/_jsxDEV(PlusOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 71\n            }, this),\n            type: \"primary\",\n            style: {\n              marginRight: '100px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 32\n          }, this),\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            components: components,\n            rowClassName: () => 'editable-row',\n            bordered: true,\n            dataSource: dataSource,\n            columns: columns,\n            pagination: false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Modal, {\n          title: \"\\u6DFB\\u52A0\\u8F66\\u53A2\\u4FE1\\u606F\",\n          visible: showStatus === 1,\n          onOk: this.handleAdd,\n          onCancel: this.handleCancel,\n          footer: [],\n          width: \"800px\",\n          style: {\n            top: 100\n          },\n          destroyOnClose: \"true\",\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            layout: \"vertical\",\n            onFinish: this.onFinish,\n            children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n              name: \"carriage\",\n              label: \"\\u8F66\\u53A2\",\n              rules: [{\n                required: true,\n                message: '请选择车厢'\n              }],\n              children: /*#__PURE__*/_jsxDEV(Select, {\n                children: [/*#__PURE__*/_jsxDEV(Option, {\n                  value: \"\\u8F66\\u53A21\",\n                  children: \"\\u8F66\\u53A21\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 295,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Option, {\n                  value: \"\\u8F66\\u53A22\",\n                  children: \"\\u8F66\\u53A22\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 296,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                textAlign: 'right',\n                marginTop: '50px'\n              },\n              children: /*#__PURE__*/_jsxDEV(Space, {\n                size: \"large\",\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  onClick: this.handleCancel,\n                  style: {\n                    marginRight: 8\n                  },\n                  children: \"\\u53D6\\u6D88\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 307,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  type: \"primary\",\n                  htmlType: \"submit\",\n                  children: \"\\u786E\\u8BA4\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 310,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"EditableRow\");\n$RefreshReg$(_c2, \"EditableCell\");","map":{"version":3,"sources":["E:/React/workspace/order-ticket/src/pages/Dev/Trains/CarriageInfo/index.jsx"],"names":["React","useContext","useState","useEffect","useRef","Card","Button","Table","Modal","Space","Form","Input","Select","Popconfirm","Divider","message","PlusOutlined","LinkButton","getCarriageList","Option","EditableContext","createContext","EditableRow","index","props","form","useForm","EditableCell","title","editable","children","dataIndex","record","handleSave","restProps","editing","setEditing","inputRef","current","focus","toggleEdit","setFieldsValue","save","values","validateFields","errInfo","console","log","childNode","margin","required","paddingRight","CarriageInfo","Component","constructor","handleDelete","key","dataSource","state","newDataSource","filter","item","carriageOrder","length","setState","count","handleAdd","result","code","newData","carriageNumber","type","levelCar","seatNumber","seatCount","priceBase","showStatus","error","msg","row","findIndex","splice","handleCancel","onFinish","success","columns","align","render","_","components","body","cell","map","col","onCell","marginRight","top","textAlign","marginTop"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect, useRef } from 'react';\r\nimport { Card, Button, Table, Modal, Space, Form, Input, Select, Popconfirm, Divider, message } from 'antd'\r\nimport {\r\n    PlusOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport LinkButton from '../../../../components/LinkButton';\r\nimport { getCarriageList } from '../../../../api/dev/train';\r\nconst { Option } = Select\r\nconst EditableContext = React.createContext(null);\r\n\r\nconst EditableRow = ({ index, ...props }) => {\r\n    const [form] = Form.useForm();\r\n    return (\r\n        <Form form={form} component={false}>\r\n            <EditableContext.Provider value={form}>\r\n                <tr {...props} />\r\n            </EditableContext.Provider>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst EditableCell = ({\r\n    title,\r\n    editable,\r\n    children,\r\n    dataIndex,\r\n    record,\r\n    handleSave,\r\n    ...restProps\r\n}) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const inputRef = useRef(null);\r\n    const form = useContext(EditableContext);\r\n    useEffect(() => {\r\n        if (editing) {\r\n            inputRef.current.focus();\r\n        }\r\n    }, [editing]);\r\n\r\n    const toggleEdit = () => {\r\n        setEditing(!editing);\r\n        form.setFieldsValue({\r\n            [dataIndex]: record[dataIndex],\r\n        });\r\n    };\r\n\r\n    const save = async () => {\r\n        try {\r\n            const values = await form.validateFields();\r\n            toggleEdit();\r\n            handleSave({ ...record, ...values });\r\n        } catch (errInfo) {\r\n            console.log('Save failed:', errInfo);\r\n        }\r\n    };\r\n\r\n    let childNode = children;\r\n\r\n    if (editable) {\r\n        childNode = editing ? (\r\n            <Form.Item\r\n                style={{\r\n                    margin: 0,\r\n                }}\r\n                name={dataIndex}\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: `${title}是必填的`,\r\n                    },\r\n                ]}\r\n            >\r\n                <Input ref={inputRef} onPressEnter={save} onBlur={save} />\r\n            </Form.Item>\r\n        ) : (\r\n            <div\r\n                className=\"editable-cell-value-wrap\"\r\n                style={{\r\n                    paddingRight: 24,\r\n                }}\r\n                onClick={toggleEdit}\r\n            >\r\n                {children}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return <td {...restProps}>{childNode}</td>;\r\n};\r\n\r\nexport default class CarriageInfo extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.columns = [\r\n            {\r\n                title: '车厢序号',\r\n                dataIndex: 'carriageOrder',\r\n                key: '2',\r\n                align: 'center',\r\n            },\r\n            {\r\n                title: '车厢编号',\r\n                dataIndex: 'carriageNumber',\r\n                key: '3',\r\n                align: 'center',\r\n                editable: true,\r\n            },\r\n            {\r\n                title: '类别',\r\n                dataIndex: 'type',\r\n                key: '4',\r\n                align: 'center',\r\n                editable: true,\r\n            },\r\n            {\r\n                title: '座位数',\r\n                dataIndex: 'seatNumber',\r\n                key: '5',\r\n                align: 'center',\r\n                editable: true,\r\n            },\r\n            {\r\n                title: '价格基数',\r\n                dataIndex: 'priceBase',\r\n                key: '6',\r\n                align: 'center',\r\n                editable: true,\r\n            },\r\n            {\r\n                title: '操作',\r\n                align: 'center',\r\n                render: (_, record) =>\r\n                    this.state.dataSource.length >= 1 ? (\r\n                        <div>\r\n                            <Popconfirm title=\"确定删除吗\" onConfirm={() => this.handleDelete(record.key)}>\r\n                                <LinkButton >删除</LinkButton>\r\n                            </Popconfirm>\r\n                        </div>\r\n                    ) : null,\r\n            },\r\n        ];\r\n        this.state = {\r\n            dataSource: [\r\n                // {\r\n                //     key: '1',\r\n                //     carriageOrder: 1,\r\n                //     carriageNumber: '001',\r\n                //     type: '动车',\r\n                //     seatNumber: 40,\r\n                //     priceBase: 5,\r\n                // },\r\n                // {\r\n                //     key: '2',\r\n                //     carriageOrder: 2,\r\n                //     carriageNumber: '001',\r\n                //     type: '动车',\r\n                //     seatNumber: 40,\r\n                //     priceBase: 5,\r\n                // },\r\n            ],\r\n            count: 1,\r\n            showStatus: 0,\r\n        }\r\n    }\r\n\r\n\r\n    handleDelete = (key) => {\r\n        const dataSource = [...this.state.dataSource];\r\n        const newDataSource = dataSource.filter((item) => {\r\n            if (item.key !== key) {\r\n                if (item.key > key) {\r\n                    --item.key\r\n                    --item.carriageOrder\r\n                }\r\n                return item\r\n            }\r\n        })\r\n        if (newDataSource.length === 0) this.setState({ count: 1 })\r\n        this.setState({\r\n            dataSource: newDataSource,\r\n        });\r\n    }\r\n    handleAdd = async () => {\r\n        // 调接口拿数据\r\n        const result = await getCarriageList()\r\n        if (result.code === 1) {\r\n            const { dataSource } = this.state;\r\n            const newData = {\r\n                key: dataSource.length + 1,\r\n                carriageOrder: dataSource.length + 1,\r\n                carriageNumber: dataSource.carriageNumber,\r\n                type: dataSource.levelCar === 1 ? '豪华' : (dataSource.levelCar === 2 ? '普通' : '经济'),\r\n                seatNumber: dataSource.seatCount,\r\n                priceBase: dataSource.priceBase,\r\n            };\r\n            this.setState({\r\n                dataSource: [...dataSource, newData],\r\n                count: dataSource.length + 1,\r\n            })\r\n            this.setState({ showStatus: 1 })\r\n        } else {\r\n            message.error(result.msg)\r\n        }\r\n\r\n    }\r\n    handleSave = (row) => {\r\n        const newData = [...this.state.dataSource];\r\n        const index = newData.findIndex((item) => row.key === item.key);\r\n        const item = newData[index];\r\n        newData.splice(index, 1, { ...item, ...row });\r\n        this.setState({\r\n            dataSource: newData,\r\n        });\r\n    }\r\n\r\n    // 处理点击取消\r\n    handleCancel = () => {\r\n        this.setState({ showStatus: 0 })\r\n    }\r\n\r\n    // 表单提交\r\n    onFinish = (values) => {\r\n        message.success(\"添加成功\")\r\n        this.setState({ showStatus: 0 })\r\n    }\r\n\r\n    render() {\r\n        const { dataSource, showStatus } = this.state;\r\n        const components = {\r\n            body: {\r\n                row: EditableRow,\r\n                cell: EditableCell,\r\n            },\r\n        };\r\n        const columns = this.columns.map((col) => {\r\n            if (!col.editable) {\r\n                return col;\r\n            }\r\n\r\n            return {\r\n                ...col,\r\n                onCell: (record) => ({\r\n                    record,\r\n                    editable: col.editable,\r\n                    dataIndex: col.dataIndex,\r\n                    title: col.title,\r\n                    handleSave: this.handleSave,\r\n                }),\r\n            };\r\n        });\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <Card\r\n                        title={<Divider orientation=\"left\" plain>\r\n                            <Button shape='round'>车厢信息</Button>\r\n                        </Divider>}\r\n                        size='small'\r\n                        extra={<Button onClick={this.handleAdd} icon={<PlusOutlined />} type=\"primary\" style={{ marginRight: '100px' }}></Button>}\r\n                    >\r\n                        <Table\r\n                            components={components}\r\n                            rowClassName={() => 'editable-row'}\r\n                            bordered\r\n                            dataSource={dataSource}\r\n                            columns={columns}\r\n                            pagination={false}\r\n                        />\r\n                    </Card>\r\n                </div>\r\n                {/* 添加车厢信息的模态窗口 */}\r\n                <div>\r\n                    <Modal\r\n                        title=\"添加车厢信息\"\r\n                        visible={showStatus === 1}\r\n                        onOk={this.handleAdd}\r\n                        onCancel={this.handleCancel}\r\n                        footer={[]}\r\n                        width='800px'\r\n                        style={{ top: 100 }}\r\n                        destroyOnClose='true'\r\n                    >\r\n                        <Form\r\n                            layout=\"vertical\"\r\n                            onFinish={this.onFinish}\r\n                        >\r\n                            <Form.Item\r\n                                name=\"carriage\"\r\n                                label=\"车厢\"\r\n                                rules={[{ required: true, message: '请选择车厢' }]}\r\n\r\n                            >\r\n                                <Select>\r\n                                    <Option value=\"车厢1\">车厢1</Option>\r\n                                    <Option value=\"车厢2\">车厢2</Option>\r\n                                </Select>\r\n                            </Form.Item>\r\n\r\n                            <div\r\n                                style={{\r\n                                    textAlign: 'right',\r\n                                    marginTop: '50px'\r\n                                }}\r\n                            >\r\n                                <Space size=\"large\">\r\n                                    <Button onClick={this.handleCancel} style={{ marginRight: 8 }}>\r\n                                        取消\r\n                                    </Button>\r\n                                    <Button type=\"primary\" htmlType=\"submit\">\r\n                                        确认\r\n                                    </Button>\r\n                                </Space>\r\n\r\n                            </div>\r\n                        </Form>\r\n                    </Modal>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}
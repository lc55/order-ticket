{"ast":null,"code":"var _jsxFileName = \"E:\\\\React\\\\workspace\\\\order-ticket\\\\src\\\\pages\\\\Trains\\\\CarriageInfo\\\\index.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect, useRef } from 'react';\nimport { Table, Input, Button, Popconfirm, Form, Divider, Card } from 'antd';\nimport { sortableContainer, sortableElement, sortableHandle } from 'react-sortable-hoc';\nimport { PlusOutlined, MenuOutlined } from '@ant-design/icons';\nimport LinkButton from '../../../components/LinkButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditableContext = /*#__PURE__*/React.createContext(null);\n\nconst EditableRow = ({\n  index,\n  ...props\n}) => {\n  _s();\n\n  const [form] = Form.useForm();\n  return /*#__PURE__*/_jsxDEV(Form, {\n    form: form,\n    component: false,\n    children: /*#__PURE__*/_jsxDEV(EditableContext.Provider, {\n      value: form,\n      children: /*#__PURE__*/_jsxDEV(\"tr\", { ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EditableRow, \"rI7DrJIrFu7YmlGWYiMFTzs8jF0=\", false, function () {\n  return [Form.useForm];\n});\n\n_c = EditableRow;\n\nconst EditableCell = ({\n  title,\n  editable,\n  children,\n  dataIndex,\n  record,\n  handleSave,\n  ...restProps\n}) => {\n  _s2();\n\n  const [editing, setEditing] = useState(false);\n  const inputRef = useRef(null);\n  const form = useContext(EditableContext);\n  useEffect(() => {\n    if (editing) {\n      inputRef.current.focus();\n    }\n  }, [editing]);\n\n  const toggleEdit = () => {\n    setEditing(!editing);\n    form.setFieldsValue({\n      [dataIndex]: record[dataIndex]\n    });\n  };\n\n  const save = async () => {\n    try {\n      const values = await form.validateFields();\n      toggleEdit();\n      handleSave({ ...record,\n        ...values\n      });\n    } catch (errInfo) {\n      console.log('Save failed:', errInfo);\n    }\n  };\n\n  let childNode = children;\n\n  if (editable) {\n    childNode = editing ? /*#__PURE__*/_jsxDEV(Form.Item, {\n      style: {\n        margin: 0\n      },\n      name: dataIndex,\n      rules: [{\n        required: true,\n        message: `${title}是必填的`\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        ref: inputRef,\n        onPressEnter: save,\n        onBlur: save\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editable-cell-value-wrap\",\n      style: {\n        paddingRight: 24\n      },\n      onClick: toggleEdit,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"td\", { ...restProps,\n    children: childNode\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 12\n  }, this);\n};\n\n_s2(EditableCell, \"IMw7TsWhFd8T/FybyizRtPpww8A=\");\n\n_c2 = EditableCell;\nexport default class CarriageInfo extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onSortEnd = ({\n      oldIndex,\n      newIndex\n    }) => {\n      const {\n        dataSource\n      } = this.state;\n\n      if (oldIndex !== newIndex) {\n        const newData = arrayMove([].concat(dataSource), oldIndex, newIndex).filter(el => !!el);\n        console.log('Sorted items: ', newData);\n        this.setState({\n          dataSource: newData\n        });\n      }\n    };\n\n    this.handleDelete = key => {\n      const dataSource = [...this.state.dataSource];\n      const newDataSource = dataSource.filter(item => {\n        if (item.key !== key) {\n          if (item.key > key) {\n            --item.key;\n            --item.carriageOrder;\n          }\n\n          return item;\n        }\n      });\n      if (newDataSource.length === 0) this.setState({\n        count: 1\n      });\n      this.setState({\n        dataSource: newDataSource\n      });\n    };\n\n    this.handleAdd = () => {\n      const {\n        dataSource\n      } = this.state;\n      const newData = {\n        key: dataSource.length + 1,\n        carriageOrder: dataSource.length + 1,\n        carriageNumber: '002',\n        type: '豪华',\n        seatNumber: 40,\n        priceBase: 4\n      };\n      this.setState({\n        dataSource: [...dataSource, newData],\n        count: dataSource.length + 1\n      });\n    };\n\n    this.handleSave = row => {\n      const newData = [...this.state.dataSource];\n      const index = newData.findIndex(item => row.key === item.key);\n      const item = newData[index];\n      newData.splice(index, 1, { ...item,\n        ...row\n      });\n      this.setState({\n        dataSource: newData\n      });\n    };\n\n    this.columns = [{\n      title: '排序',\n      dataIndex: 'sort',\n      key: '1',\n      align: 'center',\n      render: () => /*#__PURE__*/_jsxDEV(DragHandle, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 31\n      }, void 0)\n    }, {\n      title: '车厢序号',\n      dataIndex: 'carriageOrder',\n      key: '2',\n      align: 'center'\n    }, {\n      title: '车厢编号',\n      dataIndex: 'carriageNumber',\n      key: '3',\n      align: 'center',\n      editable: true\n    }, {\n      title: '类别',\n      dataIndex: 'type',\n      key: '4',\n      align: 'center',\n      editable: true\n    }, {\n      title: '座位数',\n      dataIndex: 'seatNumber',\n      key: '5',\n      align: 'center',\n      editable: true\n    }, {\n      title: '价格基数',\n      dataIndex: 'priceBase',\n      key: '6',\n      align: 'center',\n      editable: true\n    }, {\n      title: '操作',\n      align: 'center',\n      render: (_, record) => this.state.dataSource.length >= 1 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Popconfirm, {\n          title: \"\\u786E\\u5B9A\\u5220\\u9664\\u5417\",\n          onConfirm: () => this.handleDelete(record.key),\n          children: /*#__PURE__*/_jsxDEV(LinkButton, {\n            children: \"\\u5220\\u9664\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 33\n          }, void 0)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 29\n        }, void 0)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 25\n      }, void 0) : null\n    }];\n    this.state = {\n      dataSource: [// {\n        //     key: '1',\n        //     carriageOrder: 1,\n        //     carriageNumber: '001',\n        //     type: '动车',\n        //     seatNumber: 40,\n        //     priceBase: 5,\n        // },\n        // {\n        //     key: '2',\n        //     carriageOrder: 2,\n        //     carriageNumber: '001',\n        //     type: '动车',\n        //     seatNumber: 40,\n        //     priceBase: 5,\n        // },\n      ],\n      count: 1\n    };\n  }\n\n  render() {\n    const {\n      dataSource\n    } = this.state;\n    const components = {\n      body: {\n        row: EditableRow,\n        cell: EditableCell\n      }\n    };\n    const columns = this.columns.map(col => {\n      if (!col.editable) {\n        return col;\n      }\n\n      return { ...col,\n        onCell: record => ({\n          record,\n          editable: col.editable,\n          dataIndex: col.dataIndex,\n          title: col.title,\n          handleSave: this.handleSave\n        })\n      };\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          title: /*#__PURE__*/_jsxDEV(Divider, {\n            orientation: \"left\",\n            plain: true,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              shape: \"round\",\n              children: \"\\u8F66\\u53A2\\u4FE1\\u606F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 32\n          }, this),\n          size: \"small\",\n          extra: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: this.handleAdd,\n            icon: /*#__PURE__*/_jsxDEV(PlusOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 71\n            }, this),\n            type: \"primary\",\n            style: {\n              marginRight: '100px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 32\n          }, this),\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            components: components,\n            rowClassName: () => 'editable-row',\n            bordered: true,\n            dataSource: dataSource,\n            columns: columns,\n            pagination: false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"EditableRow\");\n$RefreshReg$(_c2, \"EditableCell\");","map":{"version":3,"sources":["E:/React/workspace/order-ticket/src/pages/Trains/CarriageInfo/index.jsx"],"names":["React","useContext","useState","useEffect","useRef","Table","Input","Button","Popconfirm","Form","Divider","Card","sortableContainer","sortableElement","sortableHandle","PlusOutlined","MenuOutlined","LinkButton","EditableContext","createContext","EditableRow","index","props","form","useForm","EditableCell","title","editable","children","dataIndex","record","handleSave","restProps","editing","setEditing","inputRef","current","focus","toggleEdit","setFieldsValue","save","values","validateFields","errInfo","console","log","childNode","margin","required","message","paddingRight","CarriageInfo","Component","constructor","onSortEnd","oldIndex","newIndex","dataSource","state","newData","arrayMove","concat","filter","el","setState","handleDelete","key","newDataSource","item","carriageOrder","length","count","handleAdd","carriageNumber","type","seatNumber","priceBase","row","findIndex","splice","columns","align","render","_","components","body","cell","map","col","onCell","marginRight"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect, useRef } from 'react';\r\nimport { Table, Input, Button, Popconfirm, Form, Divider, Card } from 'antd';\r\nimport { sortableContainer, sortableElement, sortableHandle } from 'react-sortable-hoc';\r\nimport {\r\n    PlusOutlined,\r\n    MenuOutlined\r\n} from '@ant-design/icons';\r\nimport LinkButton from '../../../components/LinkButton';\r\n\r\nconst EditableContext = React.createContext(null);\r\nconst EditableRow = ({ index, ...props }) => {\r\n    const [form] = Form.useForm();\r\n    return (\r\n        <Form form={form} component={false}>\r\n            <EditableContext.Provider value={form}>\r\n                <tr {...props} />\r\n            </EditableContext.Provider>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst EditableCell = ({\r\n    title,\r\n    editable,\r\n    children,\r\n    dataIndex,\r\n    record,\r\n    handleSave,\r\n    ...restProps\r\n}) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const inputRef = useRef(null);\r\n    const form = useContext(EditableContext);\r\n    useEffect(() => {\r\n        if (editing) {\r\n            inputRef.current.focus();\r\n        }\r\n    }, [editing]);\r\n\r\n    const toggleEdit = () => {\r\n        setEditing(!editing);\r\n        form.setFieldsValue({\r\n            [dataIndex]: record[dataIndex],\r\n        });\r\n    };\r\n\r\n    const save = async () => {\r\n        try {\r\n            const values = await form.validateFields();\r\n            toggleEdit();\r\n            handleSave({ ...record, ...values });\r\n        } catch (errInfo) {\r\n            console.log('Save failed:', errInfo);\r\n        }\r\n    };\r\n\r\n    let childNode = children;\r\n\r\n    if (editable) {\r\n        childNode = editing ? (\r\n            <Form.Item\r\n                style={{\r\n                    margin: 0,\r\n                }}\r\n                name={dataIndex}\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: `${title}是必填的`,\r\n                    },\r\n                ]}\r\n            >\r\n                <Input ref={inputRef} onPressEnter={save} onBlur={save} />\r\n            </Form.Item>\r\n        ) : (\r\n            <div\r\n                className=\"editable-cell-value-wrap\"\r\n                style={{\r\n                    paddingRight: 24,\r\n                }}\r\n                onClick={toggleEdit}\r\n            >\r\n                {children}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return <td {...restProps}>{childNode}</td>;\r\n};\r\n\r\nexport default class CarriageInfo extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.columns = [\r\n            {\r\n                title: '排序',\r\n                dataIndex: 'sort',\r\n                key: '1',\r\n                align: 'center',\r\n                render: () => <DragHandle />,\r\n            },\r\n            {\r\n                title: '车厢序号',\r\n                dataIndex: 'carriageOrder',\r\n                key: '2',\r\n                align: 'center',\r\n            },\r\n            {\r\n                title: '车厢编号',\r\n                dataIndex: 'carriageNumber',\r\n                key: '3',\r\n                align: 'center',\r\n                editable: true,\r\n            },\r\n            {\r\n                title: '类别',\r\n                dataIndex: 'type',\r\n                key: '4',\r\n                align: 'center',\r\n                editable: true,\r\n            },\r\n            {\r\n                title: '座位数',\r\n                dataIndex: 'seatNumber',\r\n                key: '5',\r\n                align: 'center',\r\n                editable: true,\r\n            },\r\n            {\r\n                title: '价格基数',\r\n                dataIndex: 'priceBase',\r\n                key: '6',\r\n                align: 'center',\r\n                editable: true,\r\n            },\r\n            {\r\n                title: '操作',\r\n                align: 'center',\r\n                render: (_, record) =>\r\n                    this.state.dataSource.length >= 1 ? (\r\n                        <div>\r\n                            <Popconfirm title=\"确定删除吗\" onConfirm={() => this.handleDelete(record.key)}>\r\n                                <LinkButton >删除</LinkButton>\r\n                            </Popconfirm>\r\n                        </div>\r\n                    ) : null,\r\n            },\r\n        ];\r\n        this.state = {\r\n            dataSource: [\r\n                // {\r\n                //     key: '1',\r\n                //     carriageOrder: 1,\r\n                //     carriageNumber: '001',\r\n                //     type: '动车',\r\n                //     seatNumber: 40,\r\n                //     priceBase: 5,\r\n                // },\r\n                // {\r\n                //     key: '2',\r\n                //     carriageOrder: 2,\r\n                //     carriageNumber: '001',\r\n                //     type: '动车',\r\n                //     seatNumber: 40,\r\n                //     priceBase: 5,\r\n                // },\r\n            ],\r\n            count: 1,\r\n        };\r\n    }\r\n\r\n    onSortEnd = ({ oldIndex, newIndex }) => {\r\n        const { dataSource } = this.state;\r\n        if (oldIndex !== newIndex) {\r\n            const newData = arrayMove([].concat(dataSource), oldIndex, newIndex).filter(el => !!el);\r\n            console.log('Sorted items: ', newData);\r\n            this.setState({ dataSource: newData });\r\n        }\r\n    }\r\n\r\n    handleDelete = (key) => {\r\n        const dataSource = [...this.state.dataSource];\r\n        const newDataSource = dataSource.filter((item) => {\r\n            if (item.key !== key) {\r\n                if (item.key > key) {\r\n                    --item.key\r\n                    --item.carriageOrder\r\n                }\r\n                return item\r\n            }\r\n        })\r\n        if (newDataSource.length === 0) this.setState({ count: 1 })\r\n        this.setState({\r\n            dataSource: newDataSource,\r\n        });\r\n    };\r\n    handleAdd = () => {\r\n        const { dataSource } = this.state;\r\n        const newData = {\r\n            key: dataSource.length + 1,\r\n            carriageOrder: dataSource.length + 1,\r\n            carriageNumber: '002',\r\n            type: '豪华',\r\n            seatNumber: 40,\r\n            priceBase: 4,\r\n        };\r\n        this.setState({\r\n            dataSource: [...dataSource, newData],\r\n            count: dataSource.length + 1,\r\n        });\r\n    };\r\n    handleSave = (row) => {\r\n        const newData = [...this.state.dataSource];\r\n        const index = newData.findIndex((item) => row.key === item.key);\r\n        const item = newData[index];\r\n        newData.splice(index, 1, { ...item, ...row });\r\n        this.setState({\r\n            dataSource: newData,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { dataSource } = this.state;\r\n        const components = {\r\n            body: {\r\n                row: EditableRow,\r\n                cell: EditableCell,\r\n            },\r\n        };\r\n        const columns = this.columns.map((col) => {\r\n            if (!col.editable) {\r\n                return col;\r\n            }\r\n\r\n            return {\r\n                ...col,\r\n                onCell: (record) => ({\r\n                    record,\r\n                    editable: col.editable,\r\n                    dataIndex: col.dataIndex,\r\n                    title: col.title,\r\n                    handleSave: this.handleSave,\r\n                }),\r\n            };\r\n        });\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <Card\r\n                        title={<Divider orientation=\"left\" plain>\r\n                            <Button shape='round'>车厢信息</Button>\r\n                        </Divider>}\r\n                        size='small'\r\n                        extra={<Button onClick={this.handleAdd} icon={<PlusOutlined />} type=\"primary\" style={{ marginRight: '100px' }}></Button>}\r\n                    >\r\n                        <Table\r\n                            components={components}\r\n                            rowClassName={() => 'editable-row'}\r\n                            bordered\r\n                            dataSource={dataSource}\r\n                            columns={columns}\r\n                            pagination={false}\r\n                        />\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}
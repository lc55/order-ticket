{"ast":null,"code":"var _jsxFileName = \"E:\\\\React\\\\workspace\\\\order-ticket\\\\src\\\\pages\\\\User\\\\Register\\\\index.jsx\";\nimport React, { Component } from 'react';\nimport { Form, Input } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 8\n    }\n  },\n  wrapperCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 16\n    }\n  }\n};\nexport default class UserRegister extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onFinish = values => {\n      console.log('Received values of form: ', values);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Form, { ...formItemLayout,\n        name: \"register\",\n        onFinish: this.onFinish,\n        initialValues: {\n          residence: ['zhejiang', 'hangzhou', 'xihu'],\n          prefix: '86'\n        },\n        scrollToFirstError: true,\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"phone\",\n          label: \"\\u624B\\u673A\\u53F7\\u7801\",\n          rules: [{\n            required: true,\n            message: 'P请输入手机号码！'\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            style: {\n              width: '100%'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"password\",\n          label: \"\\u5BC6\\u7801\",\n          rules: [{\n            required: true,\n            message: '请输入密码！'\n          }],\n          hasFeedback: true,\n          children: /*#__PURE__*/_jsxDEV(Input.Password, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"confirm\",\n          label: \"\\u786E\\u8BA4\\u5BC6\\u7801\",\n          dependencies: ['password'],\n          hasFeedback: true,\n          rules: [{\n            required: true,\n            message: '请输入确认密码！'\n          }, ({\n            getFieldValue\n          }) => ({\n            validator(_, value) {\n              if (!value || getFieldValue('password') === value) {\n                return Promise.resolve();\n              }\n\n              return Promise.reject(new Error('两次密码不一致！'));\n            }\n\n          })],\n          children: /*#__PURE__*/_jsxDEV(Input.Password, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["E:/React/workspace/order-ticket/src/pages/User/Register/index.jsx"],"names":["React","Component","Form","Input","formItemLayout","labelCol","xs","span","sm","wrapperCol","UserRegister","onFinish","values","console","log","render","residence","prefix","required","message","width","getFieldValue","validator","_","value","Promise","resolve","reject","Error"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACIC,IADJ,EAEIC,KAFJ,QAGO,MAHP;;AAKA,MAAMC,cAAc,GAAG;AACnBC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,EAAE,EAAE;AAAEC,MAAAA,IAAI,EAAE;AAAR,KADE;AAENC,IAAAA,EAAE,EAAE;AAAED,MAAAA,IAAI,EAAE;AAAR;AAFE,GADS;AAKnBE,EAAAA,UAAU,EAAE;AACRH,IAAAA,EAAE,EAAE;AAAEC,MAAAA,IAAI,EAAE;AAAR,KADI;AAERC,IAAAA,EAAE,EAAE;AAAED,MAAAA,IAAI,EAAE;AAAR;AAFI;AALO,CAAvB;AAUA,eAAe,MAAMG,YAAN,SAA2BT,SAA3B,CAAqC;AAAA;AAAA;;AAAA,SAEhDU,QAFgD,GAEpCC,MAAD,IAAY;AACnBC,MAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCF,MAAzC;AACH,KAJ+C;AAAA;;AAMhDG,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,6BACI,QAAC,IAAD,OACQX,cADR;AAEI,QAAA,IAAI,EAAC,UAFT;AAGI,QAAA,QAAQ,EAAE,KAAKO,QAHnB;AAII,QAAA,aAAa,EAAE;AACXK,UAAAA,SAAS,EAAE,CAAC,UAAD,EAAa,UAAb,EAAyB,MAAzB,CADA;AAEXC,UAAAA,MAAM,EAAE;AAFG,SAJnB;AAQI,QAAA,kBAAkB,MARtB;AAAA,gCAUI,QAAC,IAAD,CAAM,IAAN;AACI,UAAA,IAAI,EAAC,OADT;AAEI,UAAA,KAAK,EAAC,0BAFV;AAGI,UAAA,KAAK,EAAE,CAAC;AAAEC,YAAAA,QAAQ,EAAE,IAAZ;AAAkBC,YAAAA,OAAO,EAAE;AAA3B,WAAD,CAHX;AAAA,iCAKI,QAAC,KAAD;AAAO,YAAA,KAAK,EAAE;AAAEC,cAAAA,KAAK,EAAE;AAAT;AAAd;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA,gBAVJ,eAiBI,QAAC,IAAD,CAAM,IAAN;AACI,UAAA,IAAI,EAAC,UADT;AAEI,UAAA,KAAK,EAAC,cAFV;AAGI,UAAA,KAAK,EAAE,CACH;AACIF,YAAAA,QAAQ,EAAE,IADd;AAEIC,YAAAA,OAAO,EAAE;AAFb,WADG,CAHX;AASI,UAAA,WAAW,MATf;AAAA,iCAWI,QAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAXJ;AAAA;AAAA;AAAA;AAAA,gBAjBJ,eA+BI,QAAC,IAAD,CAAM,IAAN;AACI,UAAA,IAAI,EAAC,SADT;AAEI,UAAA,KAAK,EAAC,0BAFV;AAGI,UAAA,YAAY,EAAE,CAAC,UAAD,CAHlB;AAII,UAAA,WAAW,MAJf;AAKI,UAAA,KAAK,EAAE,CACH;AACID,YAAAA,QAAQ,EAAE,IADd;AAEIC,YAAAA,OAAO,EAAE;AAFb,WADG,EAKH,CAAC;AAAEE,YAAAA;AAAF,WAAD,MAAwB;AACpBC,YAAAA,SAAS,CAACC,CAAD,EAAIC,KAAJ,EAAW;AAChB,kBAAI,CAACA,KAAD,IAAUH,aAAa,CAAC,UAAD,CAAb,KAA8BG,KAA5C,EAAmD;AAC/C,uBAAOC,OAAO,CAACC,OAAR,EAAP;AACH;;AACD,qBAAOD,OAAO,CAACE,MAAR,CAAe,IAAIC,KAAJ,CAAU,UAAV,CAAf,CAAP;AACH;;AANmB,WAAxB,CALG,CALX;AAAA,iCAoBI,QAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AApBJ;AAAA;AAAA;AAAA;AAAA,gBA/BJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AA0DH;;AAjE+C","sourcesContent":["import React, { Component } from 'react';\r\nimport {\r\n    Form,\r\n    Input,\r\n} from 'antd'\r\n\r\nconst formItemLayout = {\r\n    labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 8 },\r\n    },\r\n    wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 16 },\r\n    },\r\n}\r\nexport default class UserRegister extends Component {\r\n\r\n    onFinish = (values) => {\r\n        console.log('Received values of form: ', values);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Form\r\n                    {...formItemLayout}\r\n                    name=\"register\"\r\n                    onFinish={this.onFinish}\r\n                    initialValues={{\r\n                        residence: ['zhejiang', 'hangzhou', 'xihu'],\r\n                        prefix: '86',\r\n                    }}\r\n                    scrollToFirstError\r\n                >\r\n                    <Form.Item\r\n                        name=\"phone\"\r\n                        label=\"手机号码\"\r\n                        rules={[{ required: true, message: 'P请输入手机号码！' }]}\r\n                    >\r\n                        <Input style={{ width: '100%' }} />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        name=\"password\"\r\n                        label=\"密码\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: '请输入密码！',\r\n                            },\r\n                        ]}\r\n                        hasFeedback\r\n                    >\r\n                        <Input.Password />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        name=\"confirm\"\r\n                        label=\"确认密码\"\r\n                        dependencies={['password']}\r\n                        hasFeedback\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: '请输入确认密码！',\r\n                            },\r\n                            ({ getFieldValue }) => ({\r\n                                validator(_, value) {\r\n                                    if (!value || getFieldValue('password') === value) {\r\n                                        return Promise.resolve();\r\n                                    }\r\n                                    return Promise.reject(new Error('两次密码不一致！'));\r\n                                },\r\n                            }),\r\n                        ]}\r\n                    >\r\n                        <Input.Password />\r\n                    </Form.Item>\r\n                </Form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
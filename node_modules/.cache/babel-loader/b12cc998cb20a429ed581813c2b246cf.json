{"ast":null,"code":"// 异步发送ajax请求的模块\n// 封装axios库\nimport axios from \"axios\";\nimport { message } from \"antd\";\nexport default async function ajax(url, data = {}, type = 'GET') {\n  try {\n    return new Promise(resolve => {\n      let promise; // 1.执行ajax请求\n\n      if (type === 'GET') {\n        promise = axios.get(url, {\n          params: data\n        });\n      } else {\n        promise = axios.post(url, data);\n      } // 2.如果成功了，调用resolve(value)\n\n\n      promise.then(response => {\n        resolve(response.data);\n      });\n    });\n  } catch (error) {\n    // 3.如果失败了，不调用reject(reason),提示异常信息\n    message.error('请求出错了：', error.message);\n  }\n}","map":{"version":3,"sources":["E:/React/workspace/order-ticket/src/api/ajax.js"],"names":["axios","message","ajax","url","data","type","Promise","resolve","promise","get","params","post","then","response","error"],"mappings":"AAAA;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,MAAxB;AAEA,eAAe,eAAeC,IAAf,CAAoBC,GAApB,EAAyBC,IAAI,GAAG,EAAhC,EAAoCC,IAAI,GAAG,KAA3C,EAAkD;AAE7D,MAAI;AACA,WAAO,IAAIC,OAAJ,CAAaC,OAAD,IAAa;AAC5B,UAAIC,OAAJ,CAD4B,CAE5B;;AACA,UAAIH,IAAI,KAAK,KAAb,EAAoB;AAChBG,QAAAA,OAAO,GAAGR,KAAK,CAACS,GAAN,CAAUN,GAAV,EAAe;AACrBO,UAAAA,MAAM,EAAEN;AADa,SAAf,CAAV;AAGH,OAJD,MAIO;AACHI,QAAAA,OAAO,GAAGR,KAAK,CAACW,IAAN,CAAWR,GAAX,EAAgBC,IAAhB,CAAV;AACH,OAT2B,CAU5B;;;AACAI,MAAAA,OAAO,CAACI,IAAR,CAAaC,QAAQ,IAAI;AACrBN,QAAAA,OAAO,CAACM,QAAQ,CAACT,IAAV,CAAP;AACH,OAFD;AAIH,KAfM,CAAP;AAgBH,GAjBD,CAiBE,OAAOU,KAAP,EAAc;AACZ;AACAb,IAAAA,OAAO,CAACa,KAAR,CAAc,QAAd,EAAwBA,KAAK,CAACb,OAA9B;AACH;AACJ","sourcesContent":["// 异步发送ajax请求的模块\r\n// 封装axios库\r\nimport axios from \"axios\"\r\nimport { message } from \"antd\"\r\n\r\nexport default async function ajax(url, data = {}, type = 'GET') {\r\n\r\n    try {\r\n        return new Promise((resolve) => {\r\n            let promise\r\n            // 1.执行ajax请求\r\n            if (type === 'GET') {\r\n                promise = axios.get(url, {\r\n                    params: data\r\n                })\r\n            } else {\r\n                promise = axios.post(url, data)\r\n            }\r\n            // 2.如果成功了，调用resolve(value)\r\n            promise.then(response => {\r\n                resolve(response.data)\r\n            })\r\n\r\n        })\r\n    } catch (error) {\r\n        // 3.如果失败了，不调用reject(reason),提示异常信息\r\n        message.error('请求出错了：', error.message)\r\n    }\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}